//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

package com.fluttify.xftts_fluttify.sub_handler;

import android.os.Bundle;
import android.util.Log;

import java.util.ArrayList;
import java.util.Collection;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import androidx.annotation.NonNull;
import io.flutter.embedding.engine.plugins.FlutterPlugin;
import io.flutter.plugin.common.BinaryMessenger;
import io.flutter.plugin.common.MethodCall;
import io.flutter.plugin.common.MethodChannel;
import io.flutter.plugin.common.PluginRegistry.Registrar;
import io.flutter.plugin.platform.PlatformViewRegistry;

import com.fluttify.xftts_fluttify.XfttsFluttifyPlugin.Handler;

import static me.yohom.foundation_fluttify.FoundationFluttifyPluginKt.getEnableLog;
import static me.yohom.foundation_fluttify.FoundationFluttifyPluginKt.getHEAP;

@SuppressWarnings("ALL")
public class SubHandler1 {
    public static Map<String, Handler> getSubHandler(BinaryMessenger messenger) {
        return new HashMap<String, Handler>() {{
            // setter batch
            put("com.iflytek.cloud.VerifierResult::set_sst_batch", (argsBatch, methodResult) -> {
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // jsonable arg
                    String sst = (String) ((Map<String, Object>) args).get("sst");
            
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    com.iflytek.cloud.VerifierResult ref = (com.iflytek.cloud.VerifierResult) getHEAP().get(refId);
            
                    ref.sst = sst;
                }
            
                methodResult.success("success");
            });
            // setter batch
            put("com.iflytek.cloud.VerifierResult::set_ret_batch", (argsBatch, methodResult) -> {
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // jsonable arg
                    int ret = (int) ((Map<String, Object>) args).get("ret");
            
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    com.iflytek.cloud.VerifierResult ref = (com.iflytek.cloud.VerifierResult) getHEAP().get(refId);
            
                    ref.ret = ret;
                }
            
                methodResult.success("success");
            });
            // setter batch
            put("com.iflytek.cloud.VerifierResult::set_dcs_batch", (argsBatch, methodResult) -> {
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // jsonable arg
                    String dcs = (String) ((Map<String, Object>) args).get("dcs");
            
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    com.iflytek.cloud.VerifierResult ref = (com.iflytek.cloud.VerifierResult) getHEAP().get(refId);
            
                    ref.dcs = dcs;
                }
            
                methodResult.success("success");
            });
            // setter batch
            put("com.iflytek.cloud.VerifierResult::set_score_batch", (argsBatch, methodResult) -> {
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // jsonable arg
                    Double score = (Double) ((Map<String, Object>) args).get("score");
            
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    com.iflytek.cloud.VerifierResult ref = (com.iflytek.cloud.VerifierResult) getHEAP().get(refId);
            
                    ref.score = score;
                }
            
                methodResult.success("success");
            });
            // setter batch
            put("com.iflytek.cloud.VerifierResult::set_score_raw_batch", (argsBatch, methodResult) -> {
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // jsonable arg
                    Double score_raw = (Double) ((Map<String, Object>) args).get("score_raw");
            
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    com.iflytek.cloud.VerifierResult ref = (com.iflytek.cloud.VerifierResult) getHEAP().get(refId);
            
                    ref.score_raw = score_raw;
                }
            
                methodResult.success("success");
            });
            // setter batch
            put("com.iflytek.cloud.VerifierResult::set_vid_batch", (argsBatch, methodResult) -> {
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // jsonable arg
                    String vid = (String) ((Map<String, Object>) args).get("vid");
            
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    com.iflytek.cloud.VerifierResult ref = (com.iflytek.cloud.VerifierResult) getHEAP().get(refId);
            
                    ref.vid = vid;
                }
            
                methodResult.success("success");
            });
            // setter batch
            put("com.iflytek.cloud.VerifierResult::set_suc_batch", (argsBatch, methodResult) -> {
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // jsonable arg
                    int suc = (int) ((Map<String, Object>) args).get("suc");
            
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    com.iflytek.cloud.VerifierResult ref = (com.iflytek.cloud.VerifierResult) getHEAP().get(refId);
            
                    ref.suc = suc;
                }
            
                methodResult.success("success");
            });
            // setter batch
            put("com.iflytek.cloud.VerifierResult::set_rgn_batch", (argsBatch, methodResult) -> {
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // jsonable arg
                    int rgn = (int) ((Map<String, Object>) args).get("rgn");
            
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    com.iflytek.cloud.VerifierResult ref = (com.iflytek.cloud.VerifierResult) getHEAP().get(refId);
            
                    ref.rgn = rgn;
                }
            
                methodResult.success("success");
            });
            // setter batch
            put("com.iflytek.cloud.VerifierResult::set_trs_batch", (argsBatch, methodResult) -> {
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // jsonable arg
                    String trs = (String) ((Map<String, Object>) args).get("trs");
            
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    com.iflytek.cloud.VerifierResult ref = (com.iflytek.cloud.VerifierResult) getHEAP().get(refId);
            
                    ref.trs = trs;
                }
            
                methodResult.success("success");
            });
            // setter batch
            put("com.iflytek.cloud.VerifierResult::set_err_batch", (argsBatch, methodResult) -> {
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // jsonable arg
                    int err = (int) ((Map<String, Object>) args).get("err");
            
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    com.iflytek.cloud.VerifierResult ref = (com.iflytek.cloud.VerifierResult) getHEAP().get(refId);
            
                    ref.err = err;
                }
            
                methodResult.success("success");
            });
            // setter batch
            put("com.iflytek.cloud.VerifierResult::set_source_batch", (argsBatch, methodResult) -> {
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // jsonable arg
                    String source = (String) ((Map<String, Object>) args).get("source");
            
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    com.iflytek.cloud.VerifierResult ref = (com.iflytek.cloud.VerifierResult) getHEAP().get(refId);
            
                    ref.source = source;
                }
            
                methodResult.success("success");
            });
            // setter batch
            put("com.iflytek.msc.VAD.VadData::set_startByte_batch", (argsBatch, methodResult) -> {
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // jsonable arg
                    int startByte = (int) ((Map<String, Object>) args).get("startByte");
            
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    com.iflytek.msc.VAD.VadData ref = (com.iflytek.msc.VAD.VadData) getHEAP().get(refId);
            
                    ref.startByte = startByte;
                }
            
                methodResult.success("success");
            });
            // setter batch
            put("com.iflytek.msc.VAD.VadData::set_endByte_batch", (argsBatch, methodResult) -> {
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // jsonable arg
                    int endByte = (int) ((Map<String, Object>) args).get("endByte");
            
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    com.iflytek.msc.VAD.VadData ref = (com.iflytek.msc.VAD.VadData) getHEAP().get(refId);
            
                    ref.endByte = endByte;
                }
            
                methodResult.success("success");
            });
            // setter batch
            put("com.iflytek.msc.VAD.VadData::set_status_batch", (argsBatch, methodResult) -> {
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // jsonable arg
                    int status = (int) ((Map<String, Object>) args).get("status");
            
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    com.iflytek.msc.VAD.VadData ref = (com.iflytek.msc.VAD.VadData) getHEAP().get(refId);
            
                    ref.status = status;
                }
            
                methodResult.success("success");
            });
            // setter batch
            put("com.iflytek.msc.VAD.VadData::set_volumeLevel_batch", (argsBatch, methodResult) -> {
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // jsonable arg
                    int volumeLevel = (int) ((Map<String, Object>) args).get("volumeLevel");
            
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    com.iflytek.msc.VAD.VadData ref = (com.iflytek.msc.VAD.VadData) getHEAP().get(refId);
            
                    ref.volumeLevel = volumeLevel;
                }
            
                methodResult.success("success");
            });
            // setter batch
            put("com.iflytek.msc.VAD.VadData::set_waitPauseOrEnd_batch", (argsBatch, methodResult) -> {
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // jsonable arg
                    int waitPauseOrEnd = (int) ((Map<String, Object>) args).get("waitPauseOrEnd");
            
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    com.iflytek.msc.VAD.VadData ref = (com.iflytek.msc.VAD.VadData) getHEAP().get(refId);
            
                    ref.waitPauseOrEnd = waitPauseOrEnd;
                }
            
                methodResult.success("success");
            });
            // setter batch
            put("com.iflytek.msc.VAD.VadData::set_endRemainFrameNum_batch", (argsBatch, methodResult) -> {
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // jsonable arg
                    int endRemainFrameNum = (int) ((Map<String, Object>) args).get("endRemainFrameNum");
            
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    com.iflytek.msc.VAD.VadData ref = (com.iflytek.msc.VAD.VadData) getHEAP().get(refId);
            
                    ref.endRemainFrameNum = endRemainFrameNum;
                }
            
                methodResult.success("success");
            });
            // setter batch
            put("com.iflytek.msc.VAD.VadData::set_waitStart_batch", (argsBatch, methodResult) -> {
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // jsonable arg
                    int waitStart = (int) ((Map<String, Object>) args).get("waitStart");
            
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    com.iflytek.msc.VAD.VadData ref = (com.iflytek.msc.VAD.VadData) getHEAP().get(refId);
            
                    ref.waitStart = waitStart;
                }
            
                methodResult.success("success");
            });
            // setter batch
            put("com.iflytek.msc.VAD.VadData::set_startRemainFrameNum_batch", (argsBatch, methodResult) -> {
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // jsonable arg
                    int startRemainFrameNum = (int) ((Map<String, Object>) args).get("startRemainFrameNum");
            
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    com.iflytek.msc.VAD.VadData ref = (com.iflytek.msc.VAD.VadData) getHEAP().get(refId);
            
                    ref.startRemainFrameNum = startRemainFrameNum;
                }
            
                methodResult.success("success");
            });
            // setter batch
            put("com.iflytek.msc.VAD.VadData::set_wavData_batch", (argsBatch, methodResult) -> {
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // jsonable arg
                    byte[] wavData = (byte[]) ((Map<String, Object>) args).get("wavData");
            
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    com.iflytek.msc.VAD.VadData ref = (com.iflytek.msc.VAD.VadData) getHEAP().get(refId);
            
                    ref.wavData = wavData;
                }
            
                methodResult.success("success");
            });
            // setter batch
            put("com.iflytek.msc.VAD.VadData::set_wavDataSize_batch", (argsBatch, methodResult) -> {
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // jsonable arg
                    int wavDataSize = (int) ((Map<String, Object>) args).get("wavDataSize");
            
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    com.iflytek.msc.VAD.VadData ref = (com.iflytek.msc.VAD.VadData) getHEAP().get(refId);
            
                    ref.wavDataSize = wavDataSize;
                }
            
                methodResult.success("success");
            });
            // setter batch
            put("com.iflytek.msc.VAD.VadData::set_inSpeech_batch", (argsBatch, methodResult) -> {
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // jsonable arg
                    int inSpeech = (int) ((Map<String, Object>) args).get("inSpeech");
            
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    com.iflytek.msc.VAD.VadData ref = (com.iflytek.msc.VAD.VadData) getHEAP().get(refId);
            
                    ref.inSpeech = inSpeech;
                }
            
                methodResult.success("success");
            });
            // setter batch
            put("com.iflytek.msc.VAD.VadData::set_audioQuality_batch", (argsBatch, methodResult) -> {
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // jsonable arg
                    int audioQuality = (int) ((Map<String, Object>) args).get("audioQuality");
            
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    com.iflytek.msc.VAD.VadData ref = (com.iflytek.msc.VAD.VadData) getHEAP().get(refId);
            
                    ref.audioQuality = audioQuality;
                }
            
                methodResult.success("success");
            });
            // setter batch
            put("com.iflytek.msc.VAD.VadData::set_firstOutByte_batch", (argsBatch, methodResult) -> {
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // jsonable arg
                    int firstOutByte = (int) ((Map<String, Object>) args).get("firstOutByte");
            
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    com.iflytek.msc.VAD.VadData ref = (com.iflytek.msc.VAD.VadData) getHEAP().get(refId);
            
                    ref.firstOutByte = firstOutByte;
                }
            
                methodResult.success("success");
            });
            // setter batch
            put("com.iflytek.msc.MSCSessionInfo::set_errorcode_batch", (argsBatch, methodResult) -> {
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // jsonable arg
                    int errorcode = (int) ((Map<String, Object>) args).get("errorcode");
            
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    com.iflytek.msc.MSCSessionInfo ref = (com.iflytek.msc.MSCSessionInfo) getHEAP().get(refId);
            
                    ref.errorcode = errorcode;
                }
            
                methodResult.success("success");
            });
            // setter batch
            put("com.iflytek.msc.MSCSessionInfo::set_epstatues_batch", (argsBatch, methodResult) -> {
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // jsonable arg
                    int epstatues = (int) ((Map<String, Object>) args).get("epstatues");
            
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    com.iflytek.msc.MSCSessionInfo ref = (com.iflytek.msc.MSCSessionInfo) getHEAP().get(refId);
            
                    ref.epstatues = epstatues;
                }
            
                methodResult.success("success");
            });
            // setter batch
            put("com.iflytek.msc.MSCSessionInfo::set_rsltstatus_batch", (argsBatch, methodResult) -> {
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // jsonable arg
                    int rsltstatus = (int) ((Map<String, Object>) args).get("rsltstatus");
            
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    com.iflytek.msc.MSCSessionInfo ref = (com.iflytek.msc.MSCSessionInfo) getHEAP().get(refId);
            
                    ref.rsltstatus = rsltstatus;
                }
            
                methodResult.success("success");
            });
            // setter batch
            put("com.iflytek.msc.MSCSessionInfo::set_sesstatus_batch", (argsBatch, methodResult) -> {
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // jsonable arg
                    int sesstatus = (int) ((Map<String, Object>) args).get("sesstatus");
            
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    com.iflytek.msc.MSCSessionInfo ref = (com.iflytek.msc.MSCSessionInfo) getHEAP().get(refId);
            
                    ref.sesstatus = sesstatus;
                }
            
                methodResult.success("success");
            });
            // setter batch
            put("com.iflytek.msc.MSCSessionInfo::set_buffer_batch", (argsBatch, methodResult) -> {
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // jsonable arg
                    byte[] buffer = (byte[]) ((Map<String, Object>) args).get("buffer");
            
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    com.iflytek.msc.MSCSessionInfo ref = (com.iflytek.msc.MSCSessionInfo) getHEAP().get(refId);
            
                    ref.buffer = buffer;
                }
            
                methodResult.success("success");
            });
            // setter batch
            put("com.iflytek.msc.MSCSessionInfo::set_buflen_batch", (argsBatch, methodResult) -> {
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // jsonable arg
                    int buflen = (int) ((Map<String, Object>) args).get("buflen");
            
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    com.iflytek.msc.MSCSessionInfo ref = (com.iflytek.msc.MSCSessionInfo) getHEAP().get(refId);
            
                    ref.buflen = buflen;
                }
            
                methodResult.success("success");
            });
            // setter batch
            put("com.iflytek.msc.MetaVAD.Instance::set_handle_batch", (argsBatch, methodResult) -> {
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // jsonable arg
                    long handle = (long) (int) ((Map<String, Object>) args).get("handle");
            
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    com.iflytek.msc.MetaVAD.Instance ref = (com.iflytek.msc.MetaVAD.Instance) getHEAP().get(refId);
            
                    ref.handle = handle;
                }
            
                methodResult.success("success");
            });
            // setter batch
            put("com.iflytek.msc.MetaVAD.Instance::set_rate_batch", (argsBatch, methodResult) -> {
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // jsonable arg
                    int rate = (int) ((Map<String, Object>) args).get("rate");
            
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    com.iflytek.msc.MetaVAD.Instance ref = (com.iflytek.msc.MetaVAD.Instance) getHEAP().get(refId);
            
                    ref.rate = rate;
                }
            
                methodResult.success("success");
            });
            // setter batch
            put("com.iflytek.msc.MetaVAD.Instance::set_begin_batch", (argsBatch, methodResult) -> {
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // jsonable arg
                    int begin = (int) ((Map<String, Object>) args).get("begin");
            
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    com.iflytek.msc.MetaVAD.Instance ref = (com.iflytek.msc.MetaVAD.Instance) getHEAP().get(refId);
            
                    ref.begin = begin;
                }
            
                methodResult.success("success");
            });
            // setter batch
            put("com.iflytek.msc.MetaVAD.Instance::set_end_batch", (argsBatch, methodResult) -> {
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // jsonable arg
                    int end = (int) ((Map<String, Object>) args).get("end");
            
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    com.iflytek.msc.MetaVAD.Instance ref = (com.iflytek.msc.MetaVAD.Instance) getHEAP().get(refId);
            
                    ref.end = end;
                }
            
                methodResult.success("success");
            });
            // setter batch
            put("com.iflytek.msc.MetaVAD.Instance::set_seg_batch", (argsBatch, methodResult) -> {
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // jsonable arg
                    int seg = (int) ((Map<String, Object>) args).get("seg");
            
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    com.iflytek.msc.MetaVAD.Instance ref = (com.iflytek.msc.MetaVAD.Instance) getHEAP().get(refId);
            
                    ref.seg = seg;
                }
            
                methodResult.success("success");
            });
            // setter batch
            put("com.iflytek.msc.MetaVAD.Instance::set_volume_batch", (argsBatch, methodResult) -> {
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // jsonable arg
                    int volume = (int) ((Map<String, Object>) args).get("volume");
            
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    com.iflytek.msc.MetaVAD.Instance ref = (com.iflytek.msc.MetaVAD.Instance) getHEAP().get(refId);
            
                    ref.volume = volume;
                }
            
                methodResult.success("success");
            });
            // method
            put("com.iflytek.speech.SpeechComponent::getPackageName", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.speech.SpeechComponent ref = (com.iflytek.speech.SpeechComponent) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.speech.SpeechComponent@" + refId + "::getPackageName(" + "" + ")");
                }
            
                // invoke native method
                String result;
                try {
                    result = ref.getPackageName();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.speech.SpeechComponent::getEngines", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.speech.SpeechComponent ref = (com.iflytek.speech.SpeechComponent) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.speech.SpeechComponent@" + refId + "::getEngines(" + "" + ")");
                }
            
                // invoke native method
                java.util.ArrayList<String> result;
                try {
                    result = ref.getEngines();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                java.util.ArrayList<String> jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.speech.SpeechComponent::addEngine", (args, methodResult) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.speech.SpeechComponent ref = (com.iflytek.speech.SpeechComponent) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.speech.SpeechComponent@" + refId + "::addEngine(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.addEngine(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.speech.SpeechComponent::isEngineAvaible", (args, methodResult) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.speech.SpeechComponent ref = (com.iflytek.speech.SpeechComponent) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.speech.SpeechComponent@" + refId + "::isEngineAvaible(" + var1 + ")");
                }
            
                // invoke native method
                boolean result;
                try {
                    result = ref.isEngineAvaible(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.speech.SpeakerVerifierAidl::getPasswordList", (args, methodResult) -> {
                // args
                // ref arg
                android.content.Context var1 = (android.content.Context) getHEAP().get((int) ((Map<String, Object>) args).get("var1"));
                // jsonable arg
                String var3 = (String) ((Map<String, Object>) args).get("var3");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.speech.SpeakerVerifierAidl ref = (com.iflytek.speech.SpeakerVerifierAidl) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.speech.SpeakerVerifierAidl@" + refId + "::getPasswordList(" + var1 + var3 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.getPasswordList(var1, new com.iflytek.speech.SpeakerVerifierAidl.DownloadListener() {
                    // method channel
                    MethodChannel callbackChannel = new MethodChannel(messenger, "com.iflytek.speech.SpeakerVerifierAidl::getPasswordList::Callback");
            
                    // call dart method
                    @Override
                    public void onData(java.util.ArrayList<com.iflytek.speech.SpeakerVerifierAidl.PassWord> var1) {
                        // print log
                        if (getEnableLog()) {
                            Log.d("java-callback", "fluttify-java-callback: onData(" + var1 + ")");
                        }
            
                        // convert to jsonable data
                        // list arg
                        List<Integer> argvar1 = new ArrayList<>();
                        for (com.iflytek.speech.SpeakerVerifierAidl.PassWord item : var1) {
                            getHEAP().put(System.identityHashCode(item), item);
                            argvar1.add(System.identityHashCode(item));
                        }
            
                        // call dart method
                        callbackChannel.invokeMethod(
                                "Callback::com.iflytek.speech.SpeakerVerifierAidl.DownloadListener::onData",
                                new HashMap<String, Object>() {{
                                    put("var1", argvar1);
                                }}
                        );
            
                        // method result
            
                    }
            
                    @Override
                    public void onError(int var1) {
                        // print log
                        if (getEnableLog()) {
                            Log.d("java-callback", "fluttify-java-callback: onError(" + var1 + ")");
                        }
            
                        // convert to jsonable data
                        // jsonable arg
                        int argvar1 = var1;
            
                        // call dart method
                        callbackChannel.invokeMethod(
                                "Callback::com.iflytek.speech.SpeakerVerifierAidl.DownloadListener::onError",
                                new HashMap<String, Object>() {{
                                    put("var1", argvar1);
                                }}
                        );
            
                        // method result
            
                    }
            
                }, var3);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.speech.SpeakerVerifierAidl::setParameter", (args, methodResult) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                String var2 = (String) ((Map<String, Object>) args).get("var2");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.speech.SpeakerVerifierAidl ref = (com.iflytek.speech.SpeakerVerifierAidl) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.speech.SpeakerVerifierAidl@" + refId + "::setParameter(" + var1 + var2 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.setParameter(var1, var2);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.speech.SpeakerVerifierAidl::getParameter", (args, methodResult) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.speech.SpeakerVerifierAidl ref = (com.iflytek.speech.SpeakerVerifierAidl) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.speech.SpeakerVerifierAidl@" + refId + "::getParameter(" + var1 + ")");
                }
            
                // invoke native method
                String result;
                try {
                    result = ref.getParameter(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.speech.SpeakerVerifierAidl::endSpeak", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.speech.SpeakerVerifierAidl ref = (com.iflytek.speech.SpeakerVerifierAidl) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.speech.SpeakerVerifierAidl@" + refId + "::endSpeak(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.endSpeak();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.speech.SpeakerVerifierAidl::stopSpeak", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.speech.SpeakerVerifierAidl ref = (com.iflytek.speech.SpeakerVerifierAidl) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.speech.SpeakerVerifierAidl@" + refId + "::stopSpeak(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.stopSpeak();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.speech.SpeechUnderstanderAidl::isUnderstanding", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.speech.SpeechUnderstanderAidl ref = (com.iflytek.speech.SpeechUnderstanderAidl) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.speech.SpeechUnderstanderAidl@" + refId + "::isUnderstanding(" + "" + ")");
                }
            
                // invoke native method
                boolean result;
                try {
                    result = ref.isUnderstanding();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.speech.SpeechUnderstanderAidl::setParameter", (args, methodResult) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                String var2 = (String) ((Map<String, Object>) args).get("var2");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.speech.SpeechUnderstanderAidl ref = (com.iflytek.speech.SpeechUnderstanderAidl) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.speech.SpeechUnderstanderAidl@" + refId + "::setParameter(" + var1 + var2 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.setParameter(var1, var2);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.speech.SpeechUnderstanderAidl::getParameter", (args, methodResult) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.speech.SpeechUnderstanderAidl ref = (com.iflytek.speech.SpeechUnderstanderAidl) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.speech.SpeechUnderstanderAidl@" + refId + "::getParameter(" + var1 + ")");
                }
            
                // invoke native method
                String result;
                try {
                    result = ref.getParameter(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.speech.SpeechUnderstanderAidl::writeAudio", (args, methodResult) -> {
                // args
                // jsonable arg
                byte[] var1 = (byte[]) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                int var2 = (int) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                int var3 = (int) ((Map<String, Object>) args).get("var3");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.speech.SpeechUnderstanderAidl ref = (com.iflytek.speech.SpeechUnderstanderAidl) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.speech.SpeechUnderstanderAidl@" + refId + "::writeAudio(" + var1 + var2 + var3 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.writeAudio(var1, var2, var3);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.speech.SpeechRecognizerAidl::setParameter", (args, methodResult) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                String var2 = (String) ((Map<String, Object>) args).get("var2");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.speech.SpeechRecognizerAidl ref = (com.iflytek.speech.SpeechRecognizerAidl) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.speech.SpeechRecognizerAidl@" + refId + "::setParameter(" + var1 + var2 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.setParameter(var1, var2);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.speech.SpeechRecognizerAidl::getParameter", (args, methodResult) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.speech.SpeechRecognizerAidl ref = (com.iflytek.speech.SpeechRecognizerAidl) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.speech.SpeechRecognizerAidl@" + refId + "::getParameter(" + var1 + ")");
                }
            
                // invoke native method
                String result;
                try {
                    result = ref.getParameter(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.speech.SpeechRecognizerAidl::destory", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.speech.SpeechRecognizerAidl ref = (com.iflytek.speech.SpeechRecognizerAidl) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.speech.SpeechRecognizerAidl@" + refId + "::destory(" + "" + ")");
                }
            
                // invoke native method
                boolean result;
                try {
                    result = ref.destory();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.speech.SpeechRecognizerAidl::isListening", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.speech.SpeechRecognizerAidl ref = (com.iflytek.speech.SpeechRecognizerAidl) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.speech.SpeechRecognizerAidl@" + refId + "::isListening(" + "" + ")");
                }
            
                // invoke native method
                boolean result;
                try {
                    result = ref.isListening();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.speech.SpeechRecognizerAidl::writeAudio", (args, methodResult) -> {
                // args
                // jsonable arg
                byte[] var1 = (byte[]) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                int var2 = (int) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                int var3 = (int) ((Map<String, Object>) args).get("var3");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.speech.SpeechRecognizerAidl ref = (com.iflytek.speech.SpeechRecognizerAidl) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.speech.SpeechRecognizerAidl@" + refId + "::writeAudio(" + var1 + var2 + var3 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.writeAudio(var1, var2, var3);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.speech.SpeechSynthesizerAidl::isSpeaking", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.speech.SpeechSynthesizerAidl ref = (com.iflytek.speech.SpeechSynthesizerAidl) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.speech.SpeechSynthesizerAidl@" + refId + "::isSpeaking(" + "" + ")");
                }
            
                // invoke native method
                boolean result;
                try {
                    result = ref.isSpeaking();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.speech.SpeechSynthesizerAidl::setParameter", (args, methodResult) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                String var2 = (String) ((Map<String, Object>) args).get("var2");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.speech.SpeechSynthesizerAidl ref = (com.iflytek.speech.SpeechSynthesizerAidl) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.speech.SpeechSynthesizerAidl@" + refId + "::setParameter(" + var1 + var2 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.setParameter(var1, var2);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.speech.SpeechSynthesizerAidl::getParameter", (args, methodResult) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.speech.SpeechSynthesizerAidl ref = (com.iflytek.speech.SpeechSynthesizerAidl) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.speech.SpeechSynthesizerAidl@" + refId + "::getParameter(" + var1 + ")");
                }
            
                // invoke native method
                String result;
                try {
                    result = ref.getParameter(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.speech.SpeechSynthesizerAidl::destory", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.speech.SpeechSynthesizerAidl ref = (com.iflytek.speech.SpeechSynthesizerAidl) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.speech.SpeechSynthesizerAidl@" + refId + "::destory(" + "" + ")");
                }
            
                // invoke native method
                boolean result;
                try {
                    result = ref.destory();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.speech.UtilityConfig::getCallerInfo", (args, methodResult) -> {
                // args
                // ref arg
                android.content.Context var0 = (android.content.Context) getHEAP().get((int) ((Map<String, Object>) args).get("var0"));
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) args).get("var1");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.speech.UtilityConfig::getCallerInfo(" + var0 + var1 + ")");
                }
            
                // invoke native method
                String result;
                try {
                    result = com.iflytek.speech.UtilityConfig.getCallerInfo(var0, var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.speech.UtilityConfig::getComponentUrlParam", (args, methodResult) -> {
                // args
                // ref arg
                android.content.Context var0 = (android.content.Context) getHEAP().get((int) ((Map<String, Object>) args).get("var0"));
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.speech.UtilityConfig::getComponentUrlParam(" + var0 + ")");
                }
            
                // invoke native method
                String result;
                try {
                    result = com.iflytek.speech.UtilityConfig.getComponentUrlParam(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.speech.WakeuperResult::getResultString", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.speech.WakeuperResult ref = (com.iflytek.speech.WakeuperResult) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.speech.WakeuperResult@" + refId + "::getResultString(" + "" + ")");
                }
            
                // invoke native method
                String result;
                try {
                    result = ref.getResultString();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.speech.VerifierResult::getResultString", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.speech.VerifierResult ref = (com.iflytek.speech.VerifierResult) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.speech.VerifierResult@" + refId + "::getResultString(" + "" + ")");
                }
            
                // invoke native method
                String result;
                try {
                    result = ref.getResultString();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.speech.RecognizerResult::getResultString", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.speech.RecognizerResult ref = (com.iflytek.speech.RecognizerResult) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.speech.RecognizerResult@" + refId + "::getResultString(" + "" + ")");
                }
            
                // invoke native method
                String result;
                try {
                    result = ref.getResultString();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.speech.Version::getVersionName", (args, methodResult) -> {
                // args
            
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.speech.Version::getVersionName(" + "" + ")");
                }
            
                // invoke native method
                String result;
                try {
                    result = com.iflytek.speech.Version.getVersionName();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.speech.Version::getVersionCode", (args, methodResult) -> {
                // args
            
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.speech.Version::getVersionCode(" + "" + ")");
                }
            
                // invoke native method
                String result;
                try {
                    result = com.iflytek.speech.Version.getVersionCode();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.speech.TextUnderstanderAidl::isUnderstanding", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.speech.TextUnderstanderAidl ref = (com.iflytek.speech.TextUnderstanderAidl) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.speech.TextUnderstanderAidl@" + refId + "::isUnderstanding(" + "" + ")");
                }
            
                // invoke native method
                boolean result;
                try {
                    result = ref.isUnderstanding();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.speech.TextUnderstanderAidl::setParameter", (args, methodResult) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                String var2 = (String) ((Map<String, Object>) args).get("var2");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.speech.TextUnderstanderAidl ref = (com.iflytek.speech.TextUnderstanderAidl) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.speech.TextUnderstanderAidl@" + refId + "::setParameter(" + var1 + var2 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.setParameter(var1, var2);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.speech.TextUnderstanderAidl::getParameter", (args, methodResult) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.speech.TextUnderstanderAidl ref = (com.iflytek.speech.TextUnderstanderAidl) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.speech.TextUnderstanderAidl@" + refId + "::getParameter(" + var1 + ")");
                }
            
                // invoke native method
                String result;
                try {
                    result = ref.getParameter(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.speech.UnderstanderResult::getResultString", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.speech.UnderstanderResult ref = (com.iflytek.speech.UnderstanderResult) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.speech.UnderstanderResult@" + refId + "::getResultString(" + "" + ")");
                }
            
                // invoke native method
                String result;
                try {
                    result = ref.getResultString();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.speech.VoiceWakeuperAidl::destroy", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.speech.VoiceWakeuperAidl ref = (com.iflytek.speech.VoiceWakeuperAidl) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.speech.VoiceWakeuperAidl@" + refId + "::destroy(" + "" + ")");
                }
            
                // invoke native method
                boolean result;
                try {
                    result = ref.destroy();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.speech.VoiceWakeuperAidl::isListening", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.speech.VoiceWakeuperAidl ref = (com.iflytek.speech.VoiceWakeuperAidl) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.speech.VoiceWakeuperAidl@" + refId + "::isListening(" + "" + ")");
                }
            
                // invoke native method
                boolean result;
                try {
                    result = ref.isListening();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.speech.VoiceWakeuperAidl::setParameter", (args, methodResult) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                String var2 = (String) ((Map<String, Object>) args).get("var2");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.speech.VoiceWakeuperAidl ref = (com.iflytek.speech.VoiceWakeuperAidl) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.speech.VoiceWakeuperAidl@" + refId + "::setParameter(" + var1 + var2 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.setParameter(var1, var2);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.speech.VoiceWakeuperAidl::getParameter", (args, methodResult) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.speech.VoiceWakeuperAidl ref = (com.iflytek.speech.VoiceWakeuperAidl) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.speech.VoiceWakeuperAidl@" + refId + "::getParameter(" + var1 + ")");
                }
            
                // invoke native method
                String result;
                try {
                    result = ref.getParameter(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.idata.extension.IFlyCollectorExt::a__android_content_Context", (args, methodResult) -> {
                // args
                // ref arg
                android.content.Context var0 = (android.content.Context) getHEAP().get((int) ((Map<String, Object>) args).get("var0"));
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.idata.extension.IFlyCollectorExt::a(" + var0 + ")");
                }
            
                // invoke native method
                com.iflytek.idata.extension.IFlyCollectorExt result;
                try {
                    result = com.iflytek.idata.extension.IFlyCollectorExt.a(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = System.identityHashCode(result);
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.idata.extension.IFlyCollectorExt::a__String", (args, methodResult) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.idata.extension.IFlyCollectorExt ref = (com.iflytek.idata.extension.IFlyCollectorExt) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.idata.extension.IFlyCollectorExt@" + refId + "::a(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.a(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.idata.extension.IFlyCollectorExt::b__String", (args, methodResult) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.idata.extension.IFlyCollectorExt ref = (com.iflytek.idata.extension.IFlyCollectorExt) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.idata.extension.IFlyCollectorExt@" + refId + "::b(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.b(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.idata.extension.IFlyCollectorExt::d", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.idata.extension.IFlyCollectorExt ref = (com.iflytek.idata.extension.IFlyCollectorExt) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.idata.extension.IFlyCollectorExt@" + refId + "::d(" + "" + ")");
                }
            
                // invoke native method
                String result;
                try {
                    result = ref.d();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.idata.extension.IFlyCollectorExt::e", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.idata.extension.IFlyCollectorExt ref = (com.iflytek.idata.extension.IFlyCollectorExt) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.idata.extension.IFlyCollectorExt@" + refId + "::e(" + "" + ")");
                }
            
                // invoke native method
                String result;
                try {
                    result = ref.e();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.SpeakerVerifier::createVerifier", (args, methodResult) -> {
                // args
                // ref arg
                android.content.Context var0 = (android.content.Context) getHEAP().get((int) ((Map<String, Object>) args).get("var0"));
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeakerVerifier::createVerifier(" + var0 + ")");
                }
            
                // invoke native method
                com.iflytek.cloud.SpeakerVerifier result;
                try {
                    result = com.iflytek.cloud.SpeakerVerifier.createVerifier(var0, new com.iflytek.cloud.InitListener() {
                    // method channel
                    MethodChannel callbackChannel = new MethodChannel(messenger, "com.iflytek.cloud.SpeakerVerifier::createVerifier::Callback");
            
                    // call dart method
                    @Override
                    public void onInit(int var1) {
                        // print log
                        if (getEnableLog()) {
                            Log.d("java-callback", "fluttify-java-callback: onInit(" + var1 + ")");
                        }
            
                        // convert to jsonable data
                        // jsonable arg
                        int argvar1 = var1;
            
                        // call dart method
                        callbackChannel.invokeMethod(
                                "Callback::com.iflytek.cloud.InitListener::onInit",
                                new HashMap<String, Object>() {{
                                    put("var1", argvar1);
                                }}
                        );
            
                        // method result
            
                    }
            
                });
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = System.identityHashCode(result);
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.SpeakerVerifier::getVerifier", (args, methodResult) -> {
                // args
            
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeakerVerifier::getVerifier(" + "" + ")");
                }
            
                // invoke native method
                com.iflytek.cloud.SpeakerVerifier result;
                try {
                    result = com.iflytek.cloud.SpeakerVerifier.getVerifier();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = System.identityHashCode(result);
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.SpeakerVerifier::getPasswordList", (args, methodResult) -> {
                // args
                // ref arg
                com.iflytek.cloud.SpeechListener var1 = (com.iflytek.cloud.SpeechListener) getHEAP().get((int) ((Map<String, Object>) args).get("var1"));
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.SpeakerVerifier ref = (com.iflytek.cloud.SpeakerVerifier) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeakerVerifier@" + refId + "::getPasswordList(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.getPasswordList(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.SpeakerVerifier::generatePassword", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.SpeakerVerifier ref = (com.iflytek.cloud.SpeakerVerifier) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeakerVerifier@" + refId + "::generatePassword(" + var1 + ")");
                }
            
                // invoke native method
                String result;
                try {
                    result = ref.generatePassword(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.SpeakerVerifier::startListening", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.SpeakerVerifier ref = (com.iflytek.cloud.SpeakerVerifier) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeakerVerifier@" + refId + "::startListening(" + "" + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.startListening(new com.iflytek.cloud.VerifierListener() {
                    // method channel
                    MethodChannel callbackChannel = new MethodChannel(messenger, "com.iflytek.cloud.SpeakerVerifier::startListening::Callback");
            
                    // call dart method
                    @Override
                    public void onVolumeChanged(int var1, byte[] var2) {
                        // print log
                        if (getEnableLog()) {
                            Log.d("java-callback", "fluttify-java-callback: onVolumeChanged(" + var1 + var2 + ")");
                        }
            
                        // convert to jsonable data
                        // jsonable arg
                        int argvar1 = var1;
                        // jsonable arg
                        byte[] argvar2 = var2;
            
                        // call dart method
                        callbackChannel.invokeMethod(
                                "Callback::com.iflytek.cloud.VerifierListener::onVolumeChanged",
                                new HashMap<String, Object>() {{
                                    put("var1", argvar1);
                                    put("var2", argvar2);
                                }}
                        );
            
                        // method result
            
                    }
            
                    @Override
                    public void onBeginOfSpeech() {
                        // print log
                        if (getEnableLog()) {
                            Log.d("java-callback", "fluttify-java-callback: onBeginOfSpeech(" + "" + ")");
                        }
            
                        // convert to jsonable data
            
            
                        // call dart method
                        callbackChannel.invokeMethod(
                                "Callback::com.iflytek.cloud.VerifierListener::onBeginOfSpeech",
                                new HashMap<String, Object>() {{
                
                                }}
                        );
            
                        // method result
            
                    }
            
                    @Override
                    public void onEndOfSpeech() {
                        // print log
                        if (getEnableLog()) {
                            Log.d("java-callback", "fluttify-java-callback: onEndOfSpeech(" + "" + ")");
                        }
            
                        // convert to jsonable data
            
            
                        // call dart method
                        callbackChannel.invokeMethod(
                                "Callback::com.iflytek.cloud.VerifierListener::onEndOfSpeech",
                                new HashMap<String, Object>() {{
                
                                }}
                        );
            
                        // method result
            
                    }
            
                    @Override
                    public void onResult(com.iflytek.cloud.VerifierResult var1) {
                        // print log
                        if (getEnableLog()) {
                            Log.d("java-callback", "fluttify-java-callback: onResult(" + var1 + ")");
                        }
            
                        // convert to jsonable data
                        // ref arg
                        final Integer argvar1;
                        if (var1 != null) {
                            argvar1 = System.identityHashCode(var1);
                            getHEAP().put(argvar1, var1);
                        } else {
                            argvar1 = null;
                        }
            
                        // call dart method
                        callbackChannel.invokeMethod(
                                "Callback::com.iflytek.cloud.VerifierListener::onResult",
                                new HashMap<String, Object>() {{
                                    put("var1", argvar1);
                                }}
                        );
            
                        // method result
            
                    }
            
                    @Override
                    public void onError(com.iflytek.cloud.SpeechError var1) {
                        // print log
                        if (getEnableLog()) {
                            Log.d("java-callback", "fluttify-java-callback: onError(" + var1 + ")");
                        }
            
                        // convert to jsonable data
                        // ref arg
                        final Integer argvar1;
                        if (var1 != null) {
                            argvar1 = System.identityHashCode(var1);
                            getHEAP().put(argvar1, var1);
                        } else {
                            argvar1 = null;
                        }
            
                        // call dart method
                        callbackChannel.invokeMethod(
                                "Callback::com.iflytek.cloud.VerifierListener::onError",
                                new HashMap<String, Object>() {{
                                    put("var1", argvar1);
                                }}
                        );
            
                        // method result
            
                    }
            
                    @Override
                    public void onEvent(int var1, int var2, int var3, android.os.Bundle var4) {
                        // print log
                        if (getEnableLog()) {
                            Log.d("java-callback", "fluttify-java-callback: onEvent(" + var1 + var2 + var3 + var4 + ")");
                        }
            
                        // convert to jsonable data
                        // jsonable arg
                        int argvar1 = var1;
                        // jsonable arg
                        int argvar2 = var2;
                        // jsonable arg
                        int argvar3 = var3;
                        // ref arg
                        final Integer argvar4;
                        if (var4 != null) {
                            argvar4 = System.identityHashCode(var4);
                            getHEAP().put(argvar4, var4);
                        } else {
                            argvar4 = null;
                        }
            
                        // call dart method
                        callbackChannel.invokeMethod(
                                "Callback::com.iflytek.cloud.VerifierListener::onEvent",
                                new HashMap<String, Object>() {{
                                    put("var1", argvar1);
                                    put("var2", argvar2);
                                    put("var3", argvar3);
                                    put("var4", argvar4);
                                }}
                        );
            
                        // method result
            
                    }
            
                });
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.SpeakerVerifier::stopListening", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.SpeakerVerifier ref = (com.iflytek.cloud.SpeakerVerifier) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeakerVerifier@" + refId + "::stopListening(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.stopListening();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.SpeakerVerifier::writeAudio", (args, methodResult) -> {
                // args
                // jsonable arg
                byte[] var1 = (byte[]) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                int var2 = (int) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                int var3 = (int) ((Map<String, Object>) args).get("var3");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.SpeakerVerifier ref = (com.iflytek.cloud.SpeakerVerifier) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeakerVerifier@" + refId + "::writeAudio(" + var1 + var2 + var3 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.writeAudio(var1, var2, var3);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.SpeakerVerifier::isListening", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.SpeakerVerifier ref = (com.iflytek.cloud.SpeakerVerifier) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeakerVerifier@" + refId + "::isListening(" + "" + ")");
                }
            
                // invoke native method
                boolean result;
                try {
                    result = ref.isListening();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.SpeakerVerifier::cancel", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.SpeakerVerifier ref = (com.iflytek.cloud.SpeakerVerifier) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeakerVerifier@" + refId + "::cancel(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.cancel();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.SpeakerVerifier::setParameter", (args, methodResult) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                String var2 = (String) ((Map<String, Object>) args).get("var2");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.SpeakerVerifier ref = (com.iflytek.cloud.SpeakerVerifier) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeakerVerifier@" + refId + "::setParameter(" + var1 + var2 + ")");
                }
            
                // invoke native method
                boolean result;
                try {
                    result = ref.setParameter(var1, var2);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.SpeakerVerifier::getParameter", (args, methodResult) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.SpeakerVerifier ref = (com.iflytek.cloud.SpeakerVerifier) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeakerVerifier@" + refId + "::getParameter(" + var1 + ")");
                }
            
                // invoke native method
                String result;
                try {
                    result = ref.getParameter(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.SpeakerVerifier::destroy", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.SpeakerVerifier ref = (com.iflytek.cloud.SpeakerVerifier) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeakerVerifier@" + refId + "::destroy(" + "" + ")");
                }
            
                // invoke native method
                boolean result;
                try {
                    result = ref.destroy();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.SpeakerVerifier::sendRequest", (args, methodResult) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                String var2 = (String) ((Map<String, Object>) args).get("var2");
                // ref arg
                com.iflytek.cloud.SpeechListener var3 = (com.iflytek.cloud.SpeechListener) getHEAP().get((int) ((Map<String, Object>) args).get("var3"));
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.SpeakerVerifier ref = (com.iflytek.cloud.SpeakerVerifier) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeakerVerifier@" + refId + "::sendRequest(" + var1 + var2 + var3 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.sendRequest(var1, var2, var3);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.SpeechTranscripter::createTranscripter", (args, methodResult) -> {
                // args
                // ref arg
                android.content.Context var0 = (android.content.Context) getHEAP().get((int) ((Map<String, Object>) args).get("var0"));
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeechTranscripter::createTranscripter(" + var0 + ")");
                }
            
                // invoke native method
                com.iflytek.cloud.SpeechTranscripter result;
                try {
                    result = com.iflytek.cloud.SpeechTranscripter.createTranscripter(var0, new com.iflytek.cloud.InitListener() {
                    // method channel
                    MethodChannel callbackChannel = new MethodChannel(messenger, "com.iflytek.cloud.SpeechTranscripter::createTranscripter::Callback");
            
                    // call dart method
                    @Override
                    public void onInit(int var1) {
                        // print log
                        if (getEnableLog()) {
                            Log.d("java-callback", "fluttify-java-callback: onInit(" + var1 + ")");
                        }
            
                        // convert to jsonable data
                        // jsonable arg
                        int argvar1 = var1;
            
                        // call dart method
                        callbackChannel.invokeMethod(
                                "Callback::com.iflytek.cloud.InitListener::onInit",
                                new HashMap<String, Object>() {{
                                    put("var1", argvar1);
                                }}
                        );
            
                        // method result
            
                    }
            
                });
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = System.identityHashCode(result);
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.SpeechTranscripter::getTranscripter", (args, methodResult) -> {
                // args
            
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeechTranscripter::getTranscripter(" + "" + ")");
                }
            
                // invoke native method
                com.iflytek.cloud.SpeechTranscripter result;
                try {
                    result = com.iflytek.cloud.SpeechTranscripter.getTranscripter();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = System.identityHashCode(result);
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.SpeechTranscripter::startTranscripting", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.SpeechTranscripter ref = (com.iflytek.cloud.SpeechTranscripter) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeechTranscripter@" + refId + "::startTranscripting(" + "" + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.startTranscripting(new com.iflytek.cloud.TranscripterListener() {
                    // method channel
                    MethodChannel callbackChannel = new MethodChannel(messenger, "com.iflytek.cloud.SpeechTranscripter::startTranscripting::Callback");
            
                    // call dart method
                    @Override
                    public void onVolumeChanged(int var1, byte[] var2) {
                        // print log
                        if (getEnableLog()) {
                            Log.d("java-callback", "fluttify-java-callback: onVolumeChanged(" + var1 + var2 + ")");
                        }
            
                        // convert to jsonable data
                        // jsonable arg
                        int argvar1 = var1;
                        // jsonable arg
                        byte[] argvar2 = var2;
            
                        // call dart method
                        callbackChannel.invokeMethod(
                                "Callback::com.iflytek.cloud.TranscripterListener::onVolumeChanged",
                                new HashMap<String, Object>() {{
                                    put("var1", argvar1);
                                    put("var2", argvar2);
                                }}
                        );
            
                        // method result
            
                    }
            
                    @Override
                    public void onBeginOfSpeech() {
                        // print log
                        if (getEnableLog()) {
                            Log.d("java-callback", "fluttify-java-callback: onBeginOfSpeech(" + "" + ")");
                        }
            
                        // convert to jsonable data
            
            
                        // call dart method
                        callbackChannel.invokeMethod(
                                "Callback::com.iflytek.cloud.TranscripterListener::onBeginOfSpeech",
                                new HashMap<String, Object>() {{
                
                                }}
                        );
            
                        // method result
            
                    }
            
                    @Override
                    public void onEndOfSpeech() {
                        // print log
                        if (getEnableLog()) {
                            Log.d("java-callback", "fluttify-java-callback: onEndOfSpeech(" + "" + ")");
                        }
            
                        // convert to jsonable data
            
            
                        // call dart method
                        callbackChannel.invokeMethod(
                                "Callback::com.iflytek.cloud.TranscripterListener::onEndOfSpeech",
                                new HashMap<String, Object>() {{
                
                                }}
                        );
            
                        // method result
            
                    }
            
                    @Override
                    public void onResult(com.iflytek.cloud.TranscripterResult var1, boolean var2) {
                        // print log
                        if (getEnableLog()) {
                            Log.d("java-callback", "fluttify-java-callback: onResult(" + var1 + var2 + ")");
                        }
            
                        // convert to jsonable data
                        // ref arg
                        final Integer argvar1;
                        if (var1 != null) {
                            argvar1 = System.identityHashCode(var1);
                            getHEAP().put(argvar1, var1);
                        } else {
                            argvar1 = null;
                        }
                        // jsonable arg
                        boolean argvar2 = var2;
            
                        // call dart method
                        callbackChannel.invokeMethod(
                                "Callback::com.iflytek.cloud.TranscripterListener::onResult",
                                new HashMap<String, Object>() {{
                                    put("var1", argvar1);
                                    put("var2", argvar2);
                                }}
                        );
            
                        // method result
            
                    }
            
                    @Override
                    public void onError(com.iflytek.cloud.SpeechError var1) {
                        // print log
                        if (getEnableLog()) {
                            Log.d("java-callback", "fluttify-java-callback: onError(" + var1 + ")");
                        }
            
                        // convert to jsonable data
                        // ref arg
                        final Integer argvar1;
                        if (var1 != null) {
                            argvar1 = System.identityHashCode(var1);
                            getHEAP().put(argvar1, var1);
                        } else {
                            argvar1 = null;
                        }
            
                        // call dart method
                        callbackChannel.invokeMethod(
                                "Callback::com.iflytek.cloud.TranscripterListener::onError",
                                new HashMap<String, Object>() {{
                                    put("var1", argvar1);
                                }}
                        );
            
                        // method result
            
                    }
            
                    @Override
                    public void onEvent(int var1, int var2, int var3, android.os.Bundle var4) {
                        // print log
                        if (getEnableLog()) {
                            Log.d("java-callback", "fluttify-java-callback: onEvent(" + var1 + var2 + var3 + var4 + ")");
                        }
            
                        // convert to jsonable data
                        // jsonable arg
                        int argvar1 = var1;
                        // jsonable arg
                        int argvar2 = var2;
                        // jsonable arg
                        int argvar3 = var3;
                        // ref arg
                        final Integer argvar4;
                        if (var4 != null) {
                            argvar4 = System.identityHashCode(var4);
                            getHEAP().put(argvar4, var4);
                        } else {
                            argvar4 = null;
                        }
            
                        // call dart method
                        callbackChannel.invokeMethod(
                                "Callback::com.iflytek.cloud.TranscripterListener::onEvent",
                                new HashMap<String, Object>() {{
                                    put("var1", argvar1);
                                    put("var2", argvar2);
                                    put("var3", argvar3);
                                    put("var4", argvar4);
                                }}
                        );
            
                        // method result
            
                    }
            
                });
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.SpeechTranscripter::writeAudio", (args, methodResult) -> {
                // args
                // jsonable arg
                byte[] var1 = (byte[]) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                int var2 = (int) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                int var3 = (int) ((Map<String, Object>) args).get("var3");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.SpeechTranscripter ref = (com.iflytek.cloud.SpeechTranscripter) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeechTranscripter@" + refId + "::writeAudio(" + var1 + var2 + var3 + ")");
                }
            
                // invoke native method
                boolean result;
                try {
                    result = ref.writeAudio(var1, var2, var3);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.SpeechTranscripter::stopTranscripting", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.SpeechTranscripter ref = (com.iflytek.cloud.SpeechTranscripter) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeechTranscripter@" + refId + "::stopTranscripting(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.stopTranscripting();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.SpeechTranscripter::isTranscripting", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.SpeechTranscripter ref = (com.iflytek.cloud.SpeechTranscripter) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeechTranscripter@" + refId + "::isTranscripting(" + "" + ")");
                }
            
                // invoke native method
                boolean result;
                try {
                    result = ref.isTranscripting();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.SpeechTranscripter::cancel", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.SpeechTranscripter ref = (com.iflytek.cloud.SpeechTranscripter) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeechTranscripter@" + refId + "::cancel(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.cancel();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.SpeechTranscripter::setParameter", (args, methodResult) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                String var2 = (String) ((Map<String, Object>) args).get("var2");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.SpeechTranscripter ref = (com.iflytek.cloud.SpeechTranscripter) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeechTranscripter@" + refId + "::setParameter(" + var1 + var2 + ")");
                }
            
                // invoke native method
                boolean result;
                try {
                    result = ref.setParameter(var1, var2);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.SpeechTranscripter::getParameter", (args, methodResult) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.SpeechTranscripter ref = (com.iflytek.cloud.SpeechTranscripter) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeechTranscripter@" + refId + "::getParameter(" + var1 + ")");
                }
            
                // invoke native method
                String result;
                try {
                    result = ref.getParameter(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.SpeechTranscripter::destroy", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.SpeechTranscripter ref = (com.iflytek.cloud.SpeechTranscripter) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeechTranscripter@" + refId + "::destroy(" + "" + ")");
                }
            
                // invoke native method
                boolean result;
                try {
                    result = ref.destroy();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.record.PcmRecorder::stopRecord", (args, methodResult) -> {
                // args
                // jsonable arg
                boolean var1 = (boolean) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.record.PcmRecorder ref = (com.iflytek.cloud.record.PcmRecorder) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.record.PcmRecorder@" + refId + "::stopRecord(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.stopRecord(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.record.PcmRecorder::startRecording", (args, methodResult) -> {
                // args
                // ref arg
                com.iflytek.cloud.record.PcmRecorder.PcmRecordListener var1 = (com.iflytek.cloud.record.PcmRecorder.PcmRecordListener) getHEAP().get((int) ((Map<String, Object>) args).get("var1"));
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.record.PcmRecorder ref = (com.iflytek.cloud.record.PcmRecorder) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.record.PcmRecorder@" + refId + "::startRecording(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.startRecording(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.record.PcmRecorder::run", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.record.PcmRecorder ref = (com.iflytek.cloud.record.PcmRecorder) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.record.PcmRecorder@" + refId + "::run(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.run();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.record.PcmRecorder.PcmRecordListener::onRecordBuffer", (args, methodResult) -> {
                // args
                // jsonable arg
                byte[] var1 = (byte[]) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                int var2 = (int) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                int var3 = (int) ((Map<String, Object>) args).get("var3");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.record.PcmRecorder.PcmRecordListener ref = (com.iflytek.cloud.record.PcmRecorder.PcmRecordListener) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.record.PcmRecorder.PcmRecordListener@" + refId + "::onRecordBuffer(" + var1 + var2 + var3 + ")");
                }
            
                // invoke native method
                try {
                    ref.onRecordBuffer(var1, var2, var3);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.record.PcmRecorder.PcmRecordListener::onError", (args, methodResult) -> {
                // args
                // ref arg
                com.iflytek.cloud.SpeechError var1 = (com.iflytek.cloud.SpeechError) getHEAP().get((int) ((Map<String, Object>) args).get("var1"));
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.record.PcmRecorder.PcmRecordListener ref = (com.iflytek.cloud.record.PcmRecorder.PcmRecordListener) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.record.PcmRecorder.PcmRecordListener@" + refId + "::onError(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.onError(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.record.PcmRecorder.PcmRecordListener::onRecordStarted", (args, methodResult) -> {
                // args
                // jsonable arg
                boolean var1 = (boolean) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.record.PcmRecorder.PcmRecordListener ref = (com.iflytek.cloud.record.PcmRecorder.PcmRecordListener) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.record.PcmRecorder.PcmRecordListener@" + refId + "::onRecordStarted(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.onRecordStarted(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.record.PcmRecorder.PcmRecordListener::onRecordReleased", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.record.PcmRecorder.PcmRecordListener ref = (com.iflytek.cloud.record.PcmRecorder.PcmRecordListener) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.record.PcmRecorder.PcmRecordListener@" + refId + "::onRecordReleased(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.onRecordReleased();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.IdentityVerifier::createVerifier", (args, methodResult) -> {
                // args
                // ref arg
                android.content.Context var0 = (android.content.Context) getHEAP().get((int) ((Map<String, Object>) args).get("var0"));
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.IdentityVerifier::createVerifier(" + var0 + ")");
                }
            
                // invoke native method
                com.iflytek.cloud.IdentityVerifier result;
                try {
                    result = com.iflytek.cloud.IdentityVerifier.createVerifier(var0, new com.iflytek.cloud.InitListener() {
                    // method channel
                    MethodChannel callbackChannel = new MethodChannel(messenger, "com.iflytek.cloud.IdentityVerifier::createVerifier::Callback");
            
                    // call dart method
                    @Override
                    public void onInit(int var1) {
                        // print log
                        if (getEnableLog()) {
                            Log.d("java-callback", "fluttify-java-callback: onInit(" + var1 + ")");
                        }
            
                        // convert to jsonable data
                        // jsonable arg
                        int argvar1 = var1;
            
                        // call dart method
                        callbackChannel.invokeMethod(
                                "Callback::com.iflytek.cloud.InitListener::onInit",
                                new HashMap<String, Object>() {{
                                    put("var1", argvar1);
                                }}
                        );
            
                        // method result
            
                    }
            
                });
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = System.identityHashCode(result);
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.IdentityVerifier::getVerifier", (args, methodResult) -> {
                // args
            
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.IdentityVerifier::getVerifier(" + "" + ")");
                }
            
                // invoke native method
                com.iflytek.cloud.IdentityVerifier result;
                try {
                    result = com.iflytek.cloud.IdentityVerifier.getVerifier();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = System.identityHashCode(result);
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.IdentityVerifier::startWorking", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.IdentityVerifier ref = (com.iflytek.cloud.IdentityVerifier) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.IdentityVerifier@" + refId + "::startWorking(" + "" + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.startWorking(new com.iflytek.cloud.IdentityListener() {
                    // method channel
                    MethodChannel callbackChannel = new MethodChannel(messenger, "com.iflytek.cloud.IdentityVerifier::startWorking::Callback");
            
                    // call dart method
                    @Override
                    public void onResult(com.iflytek.cloud.IdentityResult var1, boolean var2) {
                        // print log
                        if (getEnableLog()) {
                            Log.d("java-callback", "fluttify-java-callback: onResult(" + var1 + var2 + ")");
                        }
            
                        // convert to jsonable data
                        // ref arg
                        final Integer argvar1;
                        if (var1 != null) {
                            argvar1 = System.identityHashCode(var1);
                            getHEAP().put(argvar1, var1);
                        } else {
                            argvar1 = null;
                        }
                        // jsonable arg
                        boolean argvar2 = var2;
            
                        // call dart method
                        callbackChannel.invokeMethod(
                                "Callback::com.iflytek.cloud.IdentityListener::onResult",
                                new HashMap<String, Object>() {{
                                    put("var1", argvar1);
                                    put("var2", argvar2);
                                }}
                        );
            
                        // method result
            
                    }
            
                    @Override
                    public void onError(com.iflytek.cloud.SpeechError var1) {
                        // print log
                        if (getEnableLog()) {
                            Log.d("java-callback", "fluttify-java-callback: onError(" + var1 + ")");
                        }
            
                        // convert to jsonable data
                        // ref arg
                        final Integer argvar1;
                        if (var1 != null) {
                            argvar1 = System.identityHashCode(var1);
                            getHEAP().put(argvar1, var1);
                        } else {
                            argvar1 = null;
                        }
            
                        // call dart method
                        callbackChannel.invokeMethod(
                                "Callback::com.iflytek.cloud.IdentityListener::onError",
                                new HashMap<String, Object>() {{
                                    put("var1", argvar1);
                                }}
                        );
            
                        // method result
            
                    }
            
                    @Override
                    public void onEvent(int var1, int var2, int var3, android.os.Bundle var4) {
                        // print log
                        if (getEnableLog()) {
                            Log.d("java-callback", "fluttify-java-callback: onEvent(" + var1 + var2 + var3 + var4 + ")");
                        }
            
                        // convert to jsonable data
                        // jsonable arg
                        int argvar1 = var1;
                        // jsonable arg
                        int argvar2 = var2;
                        // jsonable arg
                        int argvar3 = var3;
                        // ref arg
                        final Integer argvar4;
                        if (var4 != null) {
                            argvar4 = System.identityHashCode(var4);
                            getHEAP().put(argvar4, var4);
                        } else {
                            argvar4 = null;
                        }
            
                        // call dart method
                        callbackChannel.invokeMethod(
                                "Callback::com.iflytek.cloud.IdentityListener::onEvent",
                                new HashMap<String, Object>() {{
                                    put("var1", argvar1);
                                    put("var2", argvar2);
                                    put("var3", argvar3);
                                    put("var4", argvar4);
                                }}
                        );
            
                        // method result
            
                    }
            
                });
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.IdentityVerifier::writeData", (args, methodResult) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                String var2 = (String) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                byte[] var3 = (byte[]) ((Map<String, Object>) args).get("var3");
                // jsonable arg
                int var4 = (int) ((Map<String, Object>) args).get("var4");
                // jsonable arg
                int var5 = (int) ((Map<String, Object>) args).get("var5");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.IdentityVerifier ref = (com.iflytek.cloud.IdentityVerifier) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.IdentityVerifier@" + refId + "::writeData(" + var1 + var2 + var3 + var4 + var5 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.writeData(var1, var2, var3, var4, var5);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.IdentityVerifier::stopWrite", (args, methodResult) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.IdentityVerifier ref = (com.iflytek.cloud.IdentityVerifier) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.IdentityVerifier@" + refId + "::stopWrite(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.stopWrite(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.IdentityVerifier::execute", (args, methodResult) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                String var2 = (String) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                String var3 = (String) ((Map<String, Object>) args).get("var3");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.IdentityVerifier ref = (com.iflytek.cloud.IdentityVerifier) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.IdentityVerifier@" + refId + "::execute(" + var1 + var2 + var3 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.execute(var1, var2, var3, new com.iflytek.cloud.IdentityListener() {
                    // method channel
                    MethodChannel callbackChannel = new MethodChannel(messenger, "com.iflytek.cloud.IdentityVerifier::execute::Callback");
            
                    // call dart method
                    @Override
                    public void onResult(com.iflytek.cloud.IdentityResult var1, boolean var2) {
                        // print log
                        if (getEnableLog()) {
                            Log.d("java-callback", "fluttify-java-callback: onResult(" + var1 + var2 + ")");
                        }
            
                        // convert to jsonable data
                        // ref arg
                        final Integer argvar1;
                        if (var1 != null) {
                            argvar1 = System.identityHashCode(var1);
                            getHEAP().put(argvar1, var1);
                        } else {
                            argvar1 = null;
                        }
                        // jsonable arg
                        boolean argvar2 = var2;
            
                        // call dart method
                        callbackChannel.invokeMethod(
                                "Callback::com.iflytek.cloud.IdentityListener::onResult",
                                new HashMap<String, Object>() {{
                                    put("var1", argvar1);
                                    put("var2", argvar2);
                                }}
                        );
            
                        // method result
            
                    }
            
                    @Override
                    public void onError(com.iflytek.cloud.SpeechError var1) {
                        // print log
                        if (getEnableLog()) {
                            Log.d("java-callback", "fluttify-java-callback: onError(" + var1 + ")");
                        }
            
                        // convert to jsonable data
                        // ref arg
                        final Integer argvar1;
                        if (var1 != null) {
                            argvar1 = System.identityHashCode(var1);
                            getHEAP().put(argvar1, var1);
                        } else {
                            argvar1 = null;
                        }
            
                        // call dart method
                        callbackChannel.invokeMethod(
                                "Callback::com.iflytek.cloud.IdentityListener::onError",
                                new HashMap<String, Object>() {{
                                    put("var1", argvar1);
                                }}
                        );
            
                        // method result
            
                    }
            
                    @Override
                    public void onEvent(int var1, int var2, int var3, android.os.Bundle var4) {
                        // print log
                        if (getEnableLog()) {
                            Log.d("java-callback", "fluttify-java-callback: onEvent(" + var1 + var2 + var3 + var4 + ")");
                        }
            
                        // convert to jsonable data
                        // jsonable arg
                        int argvar1 = var1;
                        // jsonable arg
                        int argvar2 = var2;
                        // jsonable arg
                        int argvar3 = var3;
                        // ref arg
                        final Integer argvar4;
                        if (var4 != null) {
                            argvar4 = System.identityHashCode(var4);
                            getHEAP().put(argvar4, var4);
                        } else {
                            argvar4 = null;
                        }
            
                        // call dart method
                        callbackChannel.invokeMethod(
                                "Callback::com.iflytek.cloud.IdentityListener::onEvent",
                                new HashMap<String, Object>() {{
                                    put("var1", argvar1);
                                    put("var2", argvar2);
                                    put("var3", argvar3);
                                    put("var4", argvar4);
                                }}
                        );
            
                        // method result
            
                    }
            
                });
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.IdentityVerifier::isWorking", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.IdentityVerifier ref = (com.iflytek.cloud.IdentityVerifier) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.IdentityVerifier@" + refId + "::isWorking(" + "" + ")");
                }
            
                // invoke native method
                boolean result;
                try {
                    result = ref.isWorking();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.IdentityVerifier::cancel", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.IdentityVerifier ref = (com.iflytek.cloud.IdentityVerifier) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.IdentityVerifier@" + refId + "::cancel(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.cancel();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.IdentityVerifier::setParameter", (args, methodResult) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                String var2 = (String) ((Map<String, Object>) args).get("var2");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.IdentityVerifier ref = (com.iflytek.cloud.IdentityVerifier) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.IdentityVerifier@" + refId + "::setParameter(" + var1 + var2 + ")");
                }
            
                // invoke native method
                boolean result;
                try {
                    result = ref.setParameter(var1, var2);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.IdentityVerifier::getParameter", (args, methodResult) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.IdentityVerifier ref = (com.iflytek.cloud.IdentityVerifier) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.IdentityVerifier@" + refId + "::getParameter(" + var1 + ")");
                }
            
                // invoke native method
                String result;
                try {
                    result = ref.getParameter(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.IdentityVerifier::destroy", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.IdentityVerifier ref = (com.iflytek.cloud.IdentityVerifier) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.IdentityVerifier@" + refId + "::destroy(" + "" + ")");
                }
            
                // invoke native method
                boolean result;
                try {
                    result = ref.destroy();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.util.Accelerometer.CLOCKWISE_ANGLE::getValue", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.util.Accelerometer.CLOCKWISE_ANGLE ref = (com.iflytek.cloud.util.Accelerometer.CLOCKWISE_ANGLE) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.util.Accelerometer.CLOCKWISE_ANGLE@" + refId + "::getValue(" + "" + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.getValue();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.util.AudioDetector::destroy", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.util.AudioDetector ref = (com.iflytek.cloud.util.AudioDetector) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.util.AudioDetector@" + refId + "::destroy(" + "" + ")");
                }
            
                // invoke native method
                boolean result;
                try {
                    result = ref.destroy();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.util.AudioDetector::reset", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.util.AudioDetector ref = (com.iflytek.cloud.util.AudioDetector) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.util.AudioDetector@" + refId + "::reset(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.reset();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.util.AudioDetector::detect", (args, methodResult) -> {
                // args
                // jsonable arg
                byte[] var1 = (byte[]) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                int var2 = (int) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                int var3 = (int) ((Map<String, Object>) args).get("var3");
                // jsonable arg
                boolean var4 = (boolean) ((Map<String, Object>) args).get("var4");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.util.AudioDetector ref = (com.iflytek.cloud.util.AudioDetector) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.util.AudioDetector@" + refId + "::detect(" + var1 + var2 + var3 + var4 + ")");
                }
            
                // invoke native method
                com.iflytek.cloud.util.AudioDetector.DetectorResult result;
                try {
                    result = ref.detect(var1, var2, var3, var4);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = System.identityHashCode(result);
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.util.AudioDetector::setParameter", (args, methodResult) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                String var2 = (String) ((Map<String, Object>) args).get("var2");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.util.AudioDetector ref = (com.iflytek.cloud.util.AudioDetector) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.util.AudioDetector@" + refId + "::setParameter(" + var1 + var2 + ")");
                }
            
                // invoke native method
                try {
                    ref.setParameter(var1, var2);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.util.UserWords::hasKey", (args, methodResult) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.util.UserWords ref = (com.iflytek.cloud.util.UserWords) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.util.UserWords@" + refId + "::hasKey(" + var1 + ")");
                }
            
                // invoke native method
                boolean result;
                try {
                    result = ref.hasKey(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.util.UserWords::putWord__String", (args, methodResult) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.util.UserWords ref = (com.iflytek.cloud.util.UserWords) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.util.UserWords@" + refId + "::putWord(" + var1 + ")");
                }
            
                // invoke native method
                boolean result;
                try {
                    result = ref.putWord(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.util.UserWords::putWord__String__String", (args, methodResult) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                String var2 = (String) ((Map<String, Object>) args).get("var2");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.util.UserWords ref = (com.iflytek.cloud.util.UserWords) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.util.UserWords@" + refId + "::putWord(" + var1 + var2 + ")");
                }
            
                // invoke native method
                boolean result;
                try {
                    result = ref.putWord(var1, var2);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.util.UserWords::putWords__List_String_", (args, methodResult) -> {
                // args
                // jsonable arg
                java.util.ArrayList<String> var1 = (java.util.ArrayList<String>) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.util.UserWords ref = (com.iflytek.cloud.util.UserWords) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.util.UserWords@" + refId + "::putWords(" + var1 + ")");
                }
            
                // invoke native method
                boolean result;
                try {
                    result = ref.putWords((ArrayList) var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.util.UserWords::putWords__String__List_String_", (args, methodResult) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                java.util.ArrayList<String> var2 = (java.util.ArrayList<String>) ((Map<String, Object>) args).get("var2");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.util.UserWords ref = (com.iflytek.cloud.util.UserWords) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.util.UserWords@" + refId + "::putWords(" + var1 + var2 + ")");
                }
            
                // invoke native method
                boolean result;
                try {
                    result = ref.putWords(var1, (ArrayList) var2);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.util.UserWords::getWords", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.util.UserWords ref = (com.iflytek.cloud.util.UserWords) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.util.UserWords@" + refId + "::getWords(" + "" + ")");
                }
            
                // invoke native method
                java.util.ArrayList<String> result;
                try {
                    result = ref.getWords();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                java.util.ArrayList<String> jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.util.UserWords::getKeys", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.util.UserWords ref = (com.iflytek.cloud.util.UserWords) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.util.UserWords@" + refId + "::getKeys(" + "" + ")");
                }
            
                // invoke native method
                java.util.ArrayList<String> result;
                try {
                    result = ref.getKeys();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                java.util.ArrayList<String> jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.util.UserWords::getWords__String", (args, methodResult) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.util.UserWords ref = (com.iflytek.cloud.util.UserWords) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.util.UserWords@" + refId + "::getWords(" + var1 + ")");
                }
            
                // invoke native method
                java.util.ArrayList<String> result;
                try {
                    result = ref.getWords(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                java.util.ArrayList<String> jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.util.VerifierUtil::generateNumberPassword", (args, methodResult) -> {
                // args
                // jsonable arg
                int var0 = (int) ((Map<String, Object>) args).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.util.VerifierUtil::generateNumberPassword(" + var0 + ")");
                }
            
                // invoke native method
                String result;
                try {
                    result = com.iflytek.cloud.util.VerifierUtil.generateNumberPassword(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.util.VerifierUtil::ARGB2Gray", (args, methodResult) -> {
                // args
                // ref arg
                android.graphics.Bitmap var0 = (android.graphics.Bitmap) getHEAP().get((int) ((Map<String, Object>) args).get("var0"));
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.util.VerifierUtil::ARGB2Gray(" + var0 + ")");
                }
            
                // invoke native method
                android.graphics.Bitmap result;
                try {
                    result = com.iflytek.cloud.util.VerifierUtil.ARGB2Gray(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = System.identityHashCode(result);
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.util.VerifierUtil::getBitmapsize", (args, methodResult) -> {
                // args
                // ref arg
                android.graphics.Bitmap var0 = (android.graphics.Bitmap) getHEAP().get((int) ((Map<String, Object>) args).get("var0"));
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.util.VerifierUtil::getBitmapsize(" + var0 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = com.iflytek.cloud.util.VerifierUtil.getBitmapsize(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.util.ResourceUtil::generateResourcePath", (args, methodResult) -> {
                // args
                // ref arg
                android.content.Context var0 = (android.content.Context) getHEAP().get((int) ((Map<String, Object>) args).get("var0"));
                // enum arg
                com.iflytek.cloud.util.ResourceUtil.RESOURCE_TYPE var1 = com.iflytek.cloud.util.ResourceUtil.RESOURCE_TYPE.values()[(int) ((Map<String, Object>) args).get("var1")];
                // jsonable arg
                String var2 = (String) ((Map<String, Object>) args).get("var2");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.util.ResourceUtil::generateResourcePath(" + var0 + var1 + var2 + ")");
                }
            
                // invoke native method
                String result;
                try {
                    result = com.iflytek.cloud.util.ResourceUtil.generateResourcePath(var0, var1, var2);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.util.Accelerometer::start", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.util.Accelerometer ref = (com.iflytek.cloud.util.Accelerometer) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.util.Accelerometer@" + refId + "::start(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.start();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.util.Accelerometer::stop", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.util.Accelerometer ref = (com.iflytek.cloud.util.Accelerometer) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.util.Accelerometer@" + refId + "::stop(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.stop();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.util.Accelerometer::getDirection", (args, methodResult) -> {
                // args
            
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.util.Accelerometer::getDirection(" + "" + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = com.iflytek.cloud.util.Accelerometer.getDirection();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.util.ContactManager::destroy", (args, methodResult) -> {
                // args
            
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.util.ContactManager::destroy(" + "" + ")");
                }
            
                // invoke native method
                try {
                    com.iflytek.cloud.util.ContactManager.destroy();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.util.ContactManager::queryAllContactsName", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.util.ContactManager ref = (com.iflytek.cloud.util.ContactManager) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.util.ContactManager@" + refId + "::queryAllContactsName(" + "" + ")");
                }
            
                // invoke native method
                String result;
                try {
                    result = ref.queryAllContactsName();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.util.ContactManager::asyncQueryAllContactsName", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.util.ContactManager ref = (com.iflytek.cloud.util.ContactManager) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.util.ContactManager@" + refId + "::asyncQueryAllContactsName(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.asyncQueryAllContactsName();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.util.VolumeUtil::computeVolume", (args, methodResult) -> {
                // args
                // jsonable arg
                byte[] var0 = (byte[]) ((Map<String, Object>) args).get("var0");
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.util.VolumeUtil::computeVolume(" + var0 + var1 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = com.iflytek.cloud.util.VolumeUtil.computeVolume(var0, var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.FaceRequest::sendRequest", (args, methodResult) -> {
                // args
                // jsonable arg
                byte[] var1 = (byte[]) ((Map<String, Object>) args).get("var1");
                // ref arg
                com.iflytek.cloud.RequestListener var2 = (com.iflytek.cloud.RequestListener) getHEAP().get((int) ((Map<String, Object>) args).get("var2"));
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.FaceRequest ref = (com.iflytek.cloud.FaceRequest) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.FaceRequest@" + refId + "::sendRequest(" + var1 + var2 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.sendRequest(var1, var2);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.FaceRequest::cancel", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.FaceRequest ref = (com.iflytek.cloud.FaceRequest) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.FaceRequest@" + refId + "::cancel(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.cancel();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.FaceRequest::setParameter", (args, methodResult) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                String var2 = (String) ((Map<String, Object>) args).get("var2");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.FaceRequest ref = (com.iflytek.cloud.FaceRequest) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.FaceRequest@" + refId + "::setParameter(" + var1 + var2 + ")");
                }
            
                // invoke native method
                boolean result;
                try {
                    result = ref.setParameter(var1, var2);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.FaceRequest::getParameter", (args, methodResult) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.FaceRequest ref = (com.iflytek.cloud.FaceRequest) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.FaceRequest@" + refId + "::getParameter(" + var1 + ")");
                }
            
                // invoke native method
                String result;
                try {
                    result = ref.getParameter(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.FaceRequest::destroy", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.FaceRequest ref = (com.iflytek.cloud.FaceRequest) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.FaceRequest@" + refId + "::destroy(" + "" + ")");
                }
            
                // invoke native method
                boolean result;
                try {
                    result = ref.destroy();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.SpeechListener::onEvent", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
                // ref arg
                android.os.Bundle var2 = (android.os.Bundle) getHEAP().get((int) ((Map<String, Object>) args).get("var2"));
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.SpeechListener ref = (com.iflytek.cloud.SpeechListener) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeechListener@" + refId + "::onEvent(" + var1 + var2 + ")");
                }
            
                // invoke native method
                try {
                    ref.onEvent(var1, var2);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.SpeechListener::onBufferReceived", (args, methodResult) -> {
                // args
                // jsonable arg
                byte[] var1 = (byte[]) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.SpeechListener ref = (com.iflytek.cloud.SpeechListener) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeechListener@" + refId + "::onBufferReceived(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.onBufferReceived(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.SpeechListener::onCompleted", (args, methodResult) -> {
                // args
                // ref arg
                com.iflytek.cloud.SpeechError var1 = (com.iflytek.cloud.SpeechError) getHEAP().get((int) ((Map<String, Object>) args).get("var1"));
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.SpeechListener ref = (com.iflytek.cloud.SpeechListener) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeechListener@" + refId + "::onCompleted(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.onCompleted(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.SpeechUtility::createUtility", (args, methodResult) -> {
                // args
                // ref arg
                android.content.Context var0 = (android.content.Context) getHEAP().get((int) ((Map<String, Object>) args).get("var0"));
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) args).get("var1");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeechUtility::createUtility(" + var0 + var1 + ")");
                }
            
                // invoke native method
                com.iflytek.cloud.SpeechUtility result;
                try {
                    result = com.iflytek.cloud.SpeechUtility.createUtility(var0, var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = System.identityHashCode(result);
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.SpeechUtility::getUtility", (args, methodResult) -> {
                // args
            
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeechUtility::getUtility(" + "" + ")");
                }
            
                // invoke native method
                com.iflytek.cloud.SpeechUtility result;
                try {
                    result = com.iflytek.cloud.SpeechUtility.getUtility();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = System.identityHashCode(result);
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.SpeechUtility::destroy", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.SpeechUtility ref = (com.iflytek.cloud.SpeechUtility) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeechUtility@" + refId + "::destroy(" + "" + ")");
                }
            
                // invoke native method
                boolean result;
                try {
                    result = ref.destroy();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.SpeechUtility::checkServiceInstalled", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.SpeechUtility ref = (com.iflytek.cloud.SpeechUtility) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeechUtility@" + refId + "::checkServiceInstalled(" + "" + ")");
                }
            
                // invoke native method
                boolean result;
                try {
                    result = ref.checkServiceInstalled();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.SpeechUtility::queryAvailableEngines", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.SpeechUtility ref = (com.iflytek.cloud.SpeechUtility) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeechUtility@" + refId + "::queryAvailableEngines(" + "" + ")");
                }
            
                // invoke native method
                String[] result;
                try {
                    result = ref.queryAvailableEngines();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                List<String> jsonableResult = new ArrayList<String>(java.util.Arrays.asList(result));
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.SpeechUtility::openEngineSettings", (args, methodResult) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.SpeechUtility ref = (com.iflytek.cloud.SpeechUtility) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeechUtility@" + refId + "::openEngineSettings(" + var1 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.openEngineSettings(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.SpeechUtility::getComponentUrl", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.SpeechUtility ref = (com.iflytek.cloud.SpeechUtility) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeechUtility@" + refId + "::getComponentUrl(" + "" + ")");
                }
            
                // invoke native method
                String result;
                try {
                    result = ref.getComponentUrl();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.SpeechUtility::setParameter", (args, methodResult) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                String var2 = (String) ((Map<String, Object>) args).get("var2");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.SpeechUtility ref = (com.iflytek.cloud.SpeechUtility) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeechUtility@" + refId + "::setParameter(" + var1 + var2 + ")");
                }
            
                // invoke native method
                boolean result;
                try {
                    result = ref.setParameter(var1, var2);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.SpeechUtility::getParameter", (args, methodResult) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.SpeechUtility ref = (com.iflytek.cloud.SpeechUtility) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeechUtility@" + refId + "::getParameter(" + var1 + ")");
                }
            
                // invoke native method
                String result;
                try {
                    result = ref.getParameter(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.SpeechUtility::getPlusLocalInfo", (args, methodResult) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.SpeechUtility ref = (com.iflytek.cloud.SpeechUtility) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeechUtility@" + refId + "::getPlusLocalInfo(" + var1 + ")");
                }
            
                // invoke native method
                String result;
                try {
                    result = ref.getPlusLocalInfo(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.SpeechUtility::getServiceVersion", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.SpeechUtility ref = (com.iflytek.cloud.SpeechUtility) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeechUtility@" + refId + "::getServiceVersion(" + "" + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.getServiceVersion();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.SpeechSynthesizer::createSynthesizer", (args, methodResult) -> {
                // args
                // ref arg
                android.content.Context var0 = (android.content.Context) getHEAP().get((int) ((Map<String, Object>) args).get("var0"));
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeechSynthesizer::createSynthesizer(" + var0 + ")");
                }
            
                // invoke native method
                com.iflytek.cloud.SpeechSynthesizer result;
                try {
                    result = com.iflytek.cloud.SpeechSynthesizer.createSynthesizer(var0, new com.iflytek.cloud.InitListener() {
                    // method channel
                    MethodChannel callbackChannel = new MethodChannel(messenger, "com.iflytek.cloud.SpeechSynthesizer::createSynthesizer::Callback");
            
                    // call dart method
                    @Override
                    public void onInit(int var1) {
                        // print log
                        if (getEnableLog()) {
                            Log.d("java-callback", "fluttify-java-callback: onInit(" + var1 + ")");
                        }
            
                        // convert to jsonable data
                        // jsonable arg
                        int argvar1 = var1;
            
                        // call dart method
                        callbackChannel.invokeMethod(
                                "Callback::com.iflytek.cloud.InitListener::onInit",
                                new HashMap<String, Object>() {{
                                    put("var1", argvar1);
                                }}
                        );
            
                        // method result
            
                    }
            
                });
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = System.identityHashCode(result);
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.SpeechSynthesizer::getSynthesizer", (args, methodResult) -> {
                // args
            
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeechSynthesizer::getSynthesizer(" + "" + ")");
                }
            
                // invoke native method
                com.iflytek.cloud.SpeechSynthesizer result;
                try {
                    result = com.iflytek.cloud.SpeechSynthesizer.getSynthesizer();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = System.identityHashCode(result);
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.SpeechSynthesizer::startSpeaking", (args, methodResult) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.SpeechSynthesizer ref = (com.iflytek.cloud.SpeechSynthesizer) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeechSynthesizer@" + refId + "::startSpeaking(" + var1 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.startSpeaking(var1, new com.iflytek.cloud.SynthesizerListener() {
                    // method channel
                    MethodChannel callbackChannel = new MethodChannel(messenger, "com.iflytek.cloud.SpeechSynthesizer::startSpeaking::Callback");
            
                    // call dart method
                    @Override
                    public void onSpeakBegin() {
                        // print log
                        if (getEnableLog()) {
                            Log.d("java-callback", "fluttify-java-callback: onSpeakBegin(" + "" + ")");
                        }
            
                        // convert to jsonable data
            
            
                        // call dart method
                        callbackChannel.invokeMethod(
                                "Callback::com.iflytek.cloud.SynthesizerListener::onSpeakBegin",
                                new HashMap<String, Object>() {{
                
                                }}
                        );
            
                        // method result
            
                    }
            
                    @Override
                    public void onBufferProgress(int var1, int var2, int var3, String var4) {
                        // print log
                        if (getEnableLog()) {
                            Log.d("java-callback", "fluttify-java-callback: onBufferProgress(" + var1 + var2 + var3 + var4 + ")");
                        }
            
                        // convert to jsonable data
                        // jsonable arg
                        int argvar1 = var1;
                        // jsonable arg
                        int argvar2 = var2;
                        // jsonable arg
                        int argvar3 = var3;
                        // jsonable arg
                        String argvar4 = var4;
            
                        // call dart method
                        callbackChannel.invokeMethod(
                                "Callback::com.iflytek.cloud.SynthesizerListener::onBufferProgress",
                                new HashMap<String, Object>() {{
                                    put("var1", argvar1);
                                    put("var2", argvar2);
                                    put("var3", argvar3);
                                    put("var4", argvar4);
                                }}
                        );
            
                        // method result
            
                    }
            
                    @Override
                    public void onSpeakPaused() {
                        // print log
                        if (getEnableLog()) {
                            Log.d("java-callback", "fluttify-java-callback: onSpeakPaused(" + "" + ")");
                        }
            
                        // convert to jsonable data
            
            
                        // call dart method
                        callbackChannel.invokeMethod(
                                "Callback::com.iflytek.cloud.SynthesizerListener::onSpeakPaused",
                                new HashMap<String, Object>() {{
                
                                }}
                        );
            
                        // method result
            
                    }
            
                    @Override
                    public void onSpeakResumed() {
                        // print log
                        if (getEnableLog()) {
                            Log.d("java-callback", "fluttify-java-callback: onSpeakResumed(" + "" + ")");
                        }
            
                        // convert to jsonable data
            
            
                        // call dart method
                        callbackChannel.invokeMethod(
                                "Callback::com.iflytek.cloud.SynthesizerListener::onSpeakResumed",
                                new HashMap<String, Object>() {{
                
                                }}
                        );
            
                        // method result
            
                    }
            
                    @Override
                    public void onSpeakProgress(int var1, int var2, int var3) {
                        // print log
                        if (getEnableLog()) {
                            Log.d("java-callback", "fluttify-java-callback: onSpeakProgress(" + var1 + var2 + var3 + ")");
                        }
            
                        // convert to jsonable data
                        // jsonable arg
                        int argvar1 = var1;
                        // jsonable arg
                        int argvar2 = var2;
                        // jsonable arg
                        int argvar3 = var3;
            
                        // call dart method
                        callbackChannel.invokeMethod(
                                "Callback::com.iflytek.cloud.SynthesizerListener::onSpeakProgress",
                                new HashMap<String, Object>() {{
                                    put("var1", argvar1);
                                    put("var2", argvar2);
                                    put("var3", argvar3);
                                }}
                        );
            
                        // method result
            
                    }
            
                    @Override
                    public void onCompleted(com.iflytek.cloud.SpeechError var1) {
                        // print log
                        if (getEnableLog()) {
                            Log.d("java-callback", "fluttify-java-callback: onCompleted(" + var1 + ")");
                        }
            
                        // convert to jsonable data
                        // ref arg
                        final Integer argvar1;
                        if (var1 != null) {
                            argvar1 = System.identityHashCode(var1);
                            getHEAP().put(argvar1, var1);
                        } else {
                            argvar1 = null;
                        }
            
                        // call dart method
                        callbackChannel.invokeMethod(
                                "Callback::com.iflytek.cloud.SynthesizerListener::onCompleted",
                                new HashMap<String, Object>() {{
                                    put("var1", argvar1);
                                }}
                        );
            
                        // method result
            
                    }
            
                    @Override
                    public void onEvent(int var1, int var2, int var3, android.os.Bundle var4) {
                        // print log
                        if (getEnableLog()) {
                            Log.d("java-callback", "fluttify-java-callback: onEvent(" + var1 + var2 + var3 + var4 + ")");
                        }
            
                        // convert to jsonable data
                        // jsonable arg
                        int argvar1 = var1;
                        // jsonable arg
                        int argvar2 = var2;
                        // jsonable arg
                        int argvar3 = var3;
                        // ref arg
                        final Integer argvar4;
                        if (var4 != null) {
                            argvar4 = System.identityHashCode(var4);
                            getHEAP().put(argvar4, var4);
                        } else {
                            argvar4 = null;
                        }
            
                        // call dart method
                        callbackChannel.invokeMethod(
                                "Callback::com.iflytek.cloud.SynthesizerListener::onEvent",
                                new HashMap<String, Object>() {{
                                    put("var1", argvar1);
                                    put("var2", argvar2);
                                    put("var3", argvar3);
                                    put("var4", argvar4);
                                }}
                        );
            
                        // method result
            
                    }
            
                });
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.SpeechSynthesizer::synthesizeToUri", (args, methodResult) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                String var2 = (String) ((Map<String, Object>) args).get("var2");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.SpeechSynthesizer ref = (com.iflytek.cloud.SpeechSynthesizer) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeechSynthesizer@" + refId + "::synthesizeToUri(" + var1 + var2 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.synthesizeToUri(var1, var2, new com.iflytek.cloud.SynthesizerListener() {
                    // method channel
                    MethodChannel callbackChannel = new MethodChannel(messenger, "com.iflytek.cloud.SpeechSynthesizer::synthesizeToUri::Callback");
            
                    // call dart method
                    @Override
                    public void onSpeakBegin() {
                        // print log
                        if (getEnableLog()) {
                            Log.d("java-callback", "fluttify-java-callback: onSpeakBegin(" + "" + ")");
                        }
            
                        // convert to jsonable data
            
            
                        // call dart method
                        callbackChannel.invokeMethod(
                                "Callback::com.iflytek.cloud.SynthesizerListener::onSpeakBegin",
                                new HashMap<String, Object>() {{
                
                                }}
                        );
            
                        // method result
            
                    }
            
                    @Override
                    public void onBufferProgress(int var1, int var2, int var3, String var4) {
                        // print log
                        if (getEnableLog()) {
                            Log.d("java-callback", "fluttify-java-callback: onBufferProgress(" + var1 + var2 + var3 + var4 + ")");
                        }
            
                        // convert to jsonable data
                        // jsonable arg
                        int argvar1 = var1;
                        // jsonable arg
                        int argvar2 = var2;
                        // jsonable arg
                        int argvar3 = var3;
                        // jsonable arg
                        String argvar4 = var4;
            
                        // call dart method
                        callbackChannel.invokeMethod(
                                "Callback::com.iflytek.cloud.SynthesizerListener::onBufferProgress",
                                new HashMap<String, Object>() {{
                                    put("var1", argvar1);
                                    put("var2", argvar2);
                                    put("var3", argvar3);
                                    put("var4", argvar4);
                                }}
                        );
            
                        // method result
            
                    }
            
                    @Override
                    public void onSpeakPaused() {
                        // print log
                        if (getEnableLog()) {
                            Log.d("java-callback", "fluttify-java-callback: onSpeakPaused(" + "" + ")");
                        }
            
                        // convert to jsonable data
            
            
                        // call dart method
                        callbackChannel.invokeMethod(
                                "Callback::com.iflytek.cloud.SynthesizerListener::onSpeakPaused",
                                new HashMap<String, Object>() {{
                
                                }}
                        );
            
                        // method result
            
                    }
            
                    @Override
                    public void onSpeakResumed() {
                        // print log
                        if (getEnableLog()) {
                            Log.d("java-callback", "fluttify-java-callback: onSpeakResumed(" + "" + ")");
                        }
            
                        // convert to jsonable data
            
            
                        // call dart method
                        callbackChannel.invokeMethod(
                                "Callback::com.iflytek.cloud.SynthesizerListener::onSpeakResumed",
                                new HashMap<String, Object>() {{
                
                                }}
                        );
            
                        // method result
            
                    }
            
                    @Override
                    public void onSpeakProgress(int var1, int var2, int var3) {
                        // print log
                        if (getEnableLog()) {
                            Log.d("java-callback", "fluttify-java-callback: onSpeakProgress(" + var1 + var2 + var3 + ")");
                        }
            
                        // convert to jsonable data
                        // jsonable arg
                        int argvar1 = var1;
                        // jsonable arg
                        int argvar2 = var2;
                        // jsonable arg
                        int argvar3 = var3;
            
                        // call dart method
                        callbackChannel.invokeMethod(
                                "Callback::com.iflytek.cloud.SynthesizerListener::onSpeakProgress",
                                new HashMap<String, Object>() {{
                                    put("var1", argvar1);
                                    put("var2", argvar2);
                                    put("var3", argvar3);
                                }}
                        );
            
                        // method result
            
                    }
            
                    @Override
                    public void onCompleted(com.iflytek.cloud.SpeechError var1) {
                        // print log
                        if (getEnableLog()) {
                            Log.d("java-callback", "fluttify-java-callback: onCompleted(" + var1 + ")");
                        }
            
                        // convert to jsonable data
                        // ref arg
                        final Integer argvar1;
                        if (var1 != null) {
                            argvar1 = System.identityHashCode(var1);
                            getHEAP().put(argvar1, var1);
                        } else {
                            argvar1 = null;
                        }
            
                        // call dart method
                        callbackChannel.invokeMethod(
                                "Callback::com.iflytek.cloud.SynthesizerListener::onCompleted",
                                new HashMap<String, Object>() {{
                                    put("var1", argvar1);
                                }}
                        );
            
                        // method result
            
                    }
            
                    @Override
                    public void onEvent(int var1, int var2, int var3, android.os.Bundle var4) {
                        // print log
                        if (getEnableLog()) {
                            Log.d("java-callback", "fluttify-java-callback: onEvent(" + var1 + var2 + var3 + var4 + ")");
                        }
            
                        // convert to jsonable data
                        // jsonable arg
                        int argvar1 = var1;
                        // jsonable arg
                        int argvar2 = var2;
                        // jsonable arg
                        int argvar3 = var3;
                        // ref arg
                        final Integer argvar4;
                        if (var4 != null) {
                            argvar4 = System.identityHashCode(var4);
                            getHEAP().put(argvar4, var4);
                        } else {
                            argvar4 = null;
                        }
            
                        // call dart method
                        callbackChannel.invokeMethod(
                                "Callback::com.iflytek.cloud.SynthesizerListener::onEvent",
                                new HashMap<String, Object>() {{
                                    put("var1", argvar1);
                                    put("var2", argvar2);
                                    put("var3", argvar3);
                                    put("var4", argvar4);
                                }}
                        );
            
                        // method result
            
                    }
            
                });
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.SpeechSynthesizer::pauseSpeaking", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.SpeechSynthesizer ref = (com.iflytek.cloud.SpeechSynthesizer) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeechSynthesizer@" + refId + "::pauseSpeaking(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.pauseSpeaking();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.SpeechSynthesizer::resumeSpeaking", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.SpeechSynthesizer ref = (com.iflytek.cloud.SpeechSynthesizer) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeechSynthesizer@" + refId + "::resumeSpeaking(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.resumeSpeaking();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.SpeechSynthesizer::stopSpeaking", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.SpeechSynthesizer ref = (com.iflytek.cloud.SpeechSynthesizer) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeechSynthesizer@" + refId + "::stopSpeaking(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.stopSpeaking();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.SpeechSynthesizer::isSpeaking", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.SpeechSynthesizer ref = (com.iflytek.cloud.SpeechSynthesizer) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeechSynthesizer@" + refId + "::isSpeaking(" + "" + ")");
                }
            
                // invoke native method
                boolean result;
                try {
                    result = ref.isSpeaking();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.SpeechSynthesizer::setParameter", (args, methodResult) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                String var2 = (String) ((Map<String, Object>) args).get("var2");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.SpeechSynthesizer ref = (com.iflytek.cloud.SpeechSynthesizer) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeechSynthesizer@" + refId + "::setParameter(" + var1 + var2 + ")");
                }
            
                // invoke native method
                boolean result;
                try {
                    result = ref.setParameter(var1, var2);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.SpeechSynthesizer::getParameter", (args, methodResult) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.SpeechSynthesizer ref = (com.iflytek.cloud.SpeechSynthesizer) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeechSynthesizer@" + refId + "::getParameter(" + var1 + ")");
                }
            
                // invoke native method
                String result;
                try {
                    result = ref.getParameter(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.SpeechSynthesizer::destroy", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.SpeechSynthesizer ref = (com.iflytek.cloud.SpeechSynthesizer) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeechSynthesizer@" + refId + "::destroy(" + "" + ")");
                }
            
                // invoke native method
                boolean result;
                try {
                    result = ref.destroy();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.IdentityResult::getResultString", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.IdentityResult ref = (com.iflytek.cloud.IdentityResult) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.IdentityResult@" + refId + "::getResultString(" + "" + ")");
                }
            
                // invoke native method
                String result;
                try {
                    result = ref.getResultString();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.TextUnderstander::createTextUnderstander", (args, methodResult) -> {
                // args
                // ref arg
                android.content.Context var0 = (android.content.Context) getHEAP().get((int) ((Map<String, Object>) args).get("var0"));
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.TextUnderstander::createTextUnderstander(" + var0 + ")");
                }
            
                // invoke native method
                com.iflytek.cloud.TextUnderstander result;
                try {
                    result = com.iflytek.cloud.TextUnderstander.createTextUnderstander(var0, new com.iflytek.cloud.InitListener() {
                    // method channel
                    MethodChannel callbackChannel = new MethodChannel(messenger, "com.iflytek.cloud.TextUnderstander::createTextUnderstander::Callback");
            
                    // call dart method
                    @Override
                    public void onInit(int var1) {
                        // print log
                        if (getEnableLog()) {
                            Log.d("java-callback", "fluttify-java-callback: onInit(" + var1 + ")");
                        }
            
                        // convert to jsonable data
                        // jsonable arg
                        int argvar1 = var1;
            
                        // call dart method
                        callbackChannel.invokeMethod(
                                "Callback::com.iflytek.cloud.InitListener::onInit",
                                new HashMap<String, Object>() {{
                                    put("var1", argvar1);
                                }}
                        );
            
                        // method result
            
                    }
            
                });
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = System.identityHashCode(result);
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.TextUnderstander::getTextUnderstander", (args, methodResult) -> {
                // args
            
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.TextUnderstander::getTextUnderstander(" + "" + ")");
                }
            
                // invoke native method
                com.iflytek.cloud.TextUnderstander result;
                try {
                    result = com.iflytek.cloud.TextUnderstander.getTextUnderstander();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = System.identityHashCode(result);
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.TextUnderstander::understandText", (args, methodResult) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.TextUnderstander ref = (com.iflytek.cloud.TextUnderstander) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.TextUnderstander@" + refId + "::understandText(" + var1 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.understandText(var1, new com.iflytek.cloud.TextUnderstanderListener() {
                    // method channel
                    MethodChannel callbackChannel = new MethodChannel(messenger, "com.iflytek.cloud.TextUnderstander::understandText::Callback");
            
                    // call dart method
                    @Override
                    public void onResult(com.iflytek.cloud.UnderstanderResult var1) {
                        // print log
                        if (getEnableLog()) {
                            Log.d("java-callback", "fluttify-java-callback: onResult(" + var1 + ")");
                        }
            
                        // convert to jsonable data
                        // ref arg
                        final Integer argvar1;
                        if (var1 != null) {
                            argvar1 = System.identityHashCode(var1);
                            getHEAP().put(argvar1, var1);
                        } else {
                            argvar1 = null;
                        }
            
                        // call dart method
                        callbackChannel.invokeMethod(
                                "Callback::com.iflytek.cloud.TextUnderstanderListener::onResult",
                                new HashMap<String, Object>() {{
                                    put("var1", argvar1);
                                }}
                        );
            
                        // method result
            
                    }
            
                    @Override
                    public void onError(com.iflytek.cloud.SpeechError var1) {
                        // print log
                        if (getEnableLog()) {
                            Log.d("java-callback", "fluttify-java-callback: onError(" + var1 + ")");
                        }
            
                        // convert to jsonable data
                        // ref arg
                        final Integer argvar1;
                        if (var1 != null) {
                            argvar1 = System.identityHashCode(var1);
                            getHEAP().put(argvar1, var1);
                        } else {
                            argvar1 = null;
                        }
            
                        // call dart method
                        callbackChannel.invokeMethod(
                                "Callback::com.iflytek.cloud.TextUnderstanderListener::onError",
                                new HashMap<String, Object>() {{
                                    put("var1", argvar1);
                                }}
                        );
            
                        // method result
            
                    }
            
                });
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.TextUnderstander::isUnderstanding", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.TextUnderstander ref = (com.iflytek.cloud.TextUnderstander) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.TextUnderstander@" + refId + "::isUnderstanding(" + "" + ")");
                }
            
                // invoke native method
                boolean result;
                try {
                    result = ref.isUnderstanding();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.TextUnderstander::cancel", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.TextUnderstander ref = (com.iflytek.cloud.TextUnderstander) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.TextUnderstander@" + refId + "::cancel(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.cancel();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.TextUnderstander::setParameter", (args, methodResult) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                String var2 = (String) ((Map<String, Object>) args).get("var2");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.TextUnderstander ref = (com.iflytek.cloud.TextUnderstander) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.TextUnderstander@" + refId + "::setParameter(" + var1 + var2 + ")");
                }
            
                // invoke native method
                boolean result;
                try {
                    result = ref.setParameter(var1, var2);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.TextUnderstander::getParameter", (args, methodResult) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.TextUnderstander ref = (com.iflytek.cloud.TextUnderstander) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.TextUnderstander@" + refId + "::getParameter(" + var1 + ")");
                }
            
                // invoke native method
                String result;
                try {
                    result = ref.getParameter(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.TextUnderstander::destroy", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.TextUnderstander ref = (com.iflytek.cloud.TextUnderstander) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.TextUnderstander@" + refId + "::destroy(" + "" + ")");
                }
            
                // invoke native method
                boolean result;
                try {
                    result = ref.destroy();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.msc.util.FuncAdapterSdk10::avoidSystemError", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.msc.util.FuncAdapterSdk10 ref = (com.iflytek.cloud.msc.util.FuncAdapterSdk10) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.FuncAdapterSdk10@" + refId + "::avoidSystemError(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.avoidSystemError(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.msc.util.FuncAdapterSdk10::CloseHardWareAccelerate", (args, methodResult) -> {
                // args
                // ref arg
                android.view.View var0 = (android.view.View) getHEAP().get((int) ((Map<String, Object>) args).get("var0"));
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.FuncAdapterSdk10::CloseHardWareAccelerate(" + var0 + ")");
                }
            
                // invoke native method
                try {
                    com.iflytek.cloud.msc.util.FuncAdapterSdk10.CloseHardWareAccelerate(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.msc.util.NetworkUtil::isWifiConnect", (args, methodResult) -> {
                // args
                // ref arg
                android.content.Context var0 = (android.content.Context) getHEAP().get((int) ((Map<String, Object>) args).get("var0"));
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.NetworkUtil::isWifiConnect(" + var0 + ")");
                }
            
                // invoke native method
                boolean result;
                try {
                    result = com.iflytek.cloud.msc.util.NetworkUtil.isWifiConnect(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.msc.util.NetworkUtil::checkNetwork", (args, methodResult) -> {
                // args
                // ref arg
                android.content.Context var0 = (android.content.Context) getHEAP().get((int) ((Map<String, Object>) args).get("var0"));
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.NetworkUtil::checkNetwork(" + var0 + ")");
                }
            
                // invoke native method
                try {
                    com.iflytek.cloud.msc.util.NetworkUtil.checkNetwork(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.msc.util.NetworkUtil::isNetworkAvailable", (args, methodResult) -> {
                // args
                // ref arg
                android.content.Context var0 = (android.content.Context) getHEAP().get((int) ((Map<String, Object>) args).get("var0"));
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.NetworkUtil::isNetworkAvailable(" + var0 + ")");
                }
            
                // invoke native method
                boolean result;
                try {
                    result = com.iflytek.cloud.msc.util.NetworkUtil.isNetworkAvailable(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.msc.util.NetworkUtil::ip2int", (args, methodResult) -> {
                // args
                // jsonable arg
                String var0 = (String) ((Map<String, Object>) args).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.NetworkUtil::ip2int(" + var0 + ")");
                }
            
                // invoke native method
                long result;
                try {
                    result = com.iflytek.cloud.msc.util.NetworkUtil.ip2int(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                long jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.msc.util.NetworkUtil::int2ip", (args, methodResult) -> {
                // args
                // jsonable arg
                long var0 = (long) (int) ((Map<String, Object>) args).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.NetworkUtil::int2ip(" + var0 + ")");
                }
            
                // invoke native method
                String result;
                try {
                    result = com.iflytek.cloud.msc.util.NetworkUtil.int2ip(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.msc.util.Base64::encode", (args, methodResult) -> {
                // args
                // jsonable arg
                byte[] var0 = (byte[]) ((Map<String, Object>) args).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.Base64::encode(" + var0 + ")");
                }
            
                // invoke native method
                String result;
                try {
                    result = com.iflytek.cloud.msc.util.Base64.encode(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.msc.util.Base64::decode", (args, methodResult) -> {
                // args
                // jsonable arg
                byte[] var0 = (byte[]) ((Map<String, Object>) args).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.Base64::decode(" + var0 + ")");
                }
            
                // invoke native method
                byte[] result;
                try {
                    result = com.iflytek.cloud.msc.util.Base64.decode(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                byte[] jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.msc.util.DataUtil::getComplexDateTime", (args, methodResult) -> {
                // args
                // jsonable arg
                long var0 = (long) (int) ((Map<String, Object>) args).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.DataUtil::getComplexDateTime(" + var0 + ")");
                }
            
                // invoke native method
                String result;
                try {
                    result = com.iflytek.cloud.msc.util.DataUtil.getComplexDateTime(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.msc.util.DataUtil::getSimpleDateTime", (args, methodResult) -> {
                // args
                // jsonable arg
                long var0 = (long) (int) ((Map<String, Object>) args).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.DataUtil::getSimpleDateTime(" + var0 + ")");
                }
            
                // invoke native method
                String result;
                try {
                    result = com.iflytek.cloud.msc.util.DataUtil.getSimpleDateTime(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.msc.util.DataUtil::readInt", (args, methodResult) -> {
                // args
                // jsonable arg
                byte[] var0 = (byte[]) ((Map<String, Object>) args).get("var0");
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.DataUtil::readInt(" + var0 + var1 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = com.iflytek.cloud.msc.util.DataUtil.readInt(var0, var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.msc.util.DataUtil::byteToLong", (args, methodResult) -> {
                // args
                // jsonable arg
                byte[] var0 = (byte[]) ((Map<String, Object>) args).get("var0");
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.DataUtil::byteToLong(" + var0 + var1 + ")");
                }
            
                // invoke native method
                long result;
                try {
                    result = com.iflytek.cloud.msc.util.DataUtil.byteToLong(var0, var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                long jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.msc.util.DataUtil::longToByte", (args, methodResult) -> {
                // args
                // jsonable arg
                long var0 = (long) (int) ((Map<String, Object>) args).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.DataUtil::longToByte(" + var0 + ")");
                }
            
                // invoke native method
                byte[] result;
                try {
                    result = com.iflytek.cloud.msc.util.DataUtil.longToByte(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                byte[] jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.msc.util.DataUtil::RandomInt", (args, methodResult) -> {
                // args
                // jsonable arg
                int var0 = (int) ((Map<String, Object>) args).get("var0");
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.DataUtil::RandomInt(" + var0 + var1 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = com.iflytek.cloud.msc.util.DataUtil.RandomInt(var0, var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.msc.util.DataUtil::hexstring2Int", (args, methodResult) -> {
                // args
                // jsonable arg
                String var0 = (String) ((Map<String, Object>) args).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.DataUtil::hexstring2Int(" + var0 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = com.iflytek.cloud.msc.util.DataUtil.hexstring2Int(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.msc.util.DataUtil::dip2px", (args, methodResult) -> {
                // args
                // ref arg
                android.content.Context var0 = (android.content.Context) getHEAP().get((int) ((Map<String, Object>) args).get("var0"));
                // jsonable arg
                Double var1 = (Double) ((Map<String, Object>) args).get("var1");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.DataUtil::dip2px(" + var0 + var1 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = com.iflytek.cloud.msc.util.DataUtil.dip2px(var0, new Double(var1).floatValue());
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.msc.util.DataUtil::sp2px", (args, methodResult) -> {
                // args
                // ref arg
                android.content.Context var0 = (android.content.Context) getHEAP().get((int) ((Map<String, Object>) args).get("var0"));
                // jsonable arg
                Double var1 = (Double) ((Map<String, Object>) args).get("var1");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.DataUtil::sp2px(" + var0 + var1 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = com.iflytek.cloud.msc.util.DataUtil.sp2px(var0, new Double(var1).floatValue());
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
        }};
    }
}
