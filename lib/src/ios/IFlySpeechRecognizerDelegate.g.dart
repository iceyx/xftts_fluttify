// ignore_for_file: non_constant_identifier_names, camel_case_types, missing_return, unused_import, unused_local_variable, dead_code, unnecessary_cast
//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

import 'dart:typed_data';

import 'package:xftts_fluttify/src/ios/ios.export.g.dart';
import 'package:xftts_fluttify/src/android/android.export.g.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/services.dart';

import 'package:foundation_fluttify/foundation_fluttify.dart';

mixin IFlySpeechRecognizerDelegate on NSObject {
  

  

  

  
  Future<void> onCompleted(IFlySpeechError errorCode) async {
    // print log
    if (fluttifyLogEnabled) {
      print('fluttify-dart: IFlySpeechRecognizerDelegate@$refId::onCompleted([])');
    }
  
    // invoke native method
    final __result__ = await MethodChannel('com.fluttify/xftts_fluttify').invokeMethod('IFlySpeechRecognizerDelegate::onCompleted', {"errorCode": errorCode.refId, "refId": refId});
  
  
    // handle native call
  
  
    // convert native result to dart side object
    if (__result__ == null) {
      return null;
    } else {
      final __return__ = __result__;
    
      return __return__;
    }
  }
  
  
  Future<void> onResults_isLast(List<NSObject> results, bool isLast) async {
    // print log
    if (fluttifyLogEnabled) {
      print('fluttify-dart: IFlySpeechRecognizerDelegate@$refId::onResults([\'isLast\':$isLast])');
    }
  
    // invoke native method
    final __result__ = await MethodChannel('com.fluttify/xftts_fluttify').invokeMethod('IFlySpeechRecognizerDelegate::onResults_isLast', {"results": results.map((__it__) => __it__.refId).toList(), "isLast": isLast, "refId": refId});
  
  
    // handle native call
  
  
    // convert native result to dart side object
    if (__result__ == null) {
      return null;
    } else {
      final __return__ = __result__;
    
      return __return__;
    }
  }
  
  
  Future<void> onVolumeChanged(int volume) async {
    // print log
    if (fluttifyLogEnabled) {
      print('fluttify-dart: IFlySpeechRecognizerDelegate@$refId::onVolumeChanged([\'volume\':$volume])');
    }
  
    // invoke native method
    final __result__ = await MethodChannel('com.fluttify/xftts_fluttify').invokeMethod('IFlySpeechRecognizerDelegate::onVolumeChanged', {"volume": volume, "refId": refId});
  
  
    // handle native call
  
  
    // convert native result to dart side object
    if (__result__ == null) {
      return null;
    } else {
      final __return__ = __result__;
    
      return __return__;
    }
  }
  
  
  Future<void> onBeginOfSpeech() async {
    // print log
    if (fluttifyLogEnabled) {
      print('fluttify-dart: IFlySpeechRecognizerDelegate@$refId::onBeginOfSpeech([])');
    }
  
    // invoke native method
    final __result__ = await MethodChannel('com.fluttify/xftts_fluttify').invokeMethod('IFlySpeechRecognizerDelegate::onBeginOfSpeech', {"refId": refId});
  
  
    // handle native call
  
  
    // convert native result to dart side object
    if (__result__ == null) {
      return null;
    } else {
      final __return__ = __result__;
    
      return __return__;
    }
  }
  
  
  Future<void> onEndOfSpeech() async {
    // print log
    if (fluttifyLogEnabled) {
      print('fluttify-dart: IFlySpeechRecognizerDelegate@$refId::onEndOfSpeech([])');
    }
  
    // invoke native method
    final __result__ = await MethodChannel('com.fluttify/xftts_fluttify').invokeMethod('IFlySpeechRecognizerDelegate::onEndOfSpeech', {"refId": refId});
  
  
    // handle native call
  
  
    // convert native result to dart side object
    if (__result__ == null) {
      return null;
    } else {
      final __return__ = __result__;
    
      return __return__;
    }
  }
  
  
  Future<void> onCancel() async {
    // print log
    if (fluttifyLogEnabled) {
      print('fluttify-dart: IFlySpeechRecognizerDelegate@$refId::onCancel([])');
    }
  
    // invoke native method
    final __result__ = await MethodChannel('com.fluttify/xftts_fluttify').invokeMethod('IFlySpeechRecognizerDelegate::onCancel', {"refId": refId});
  
  
    // handle native call
  
  
    // convert native result to dart side object
    if (__result__ == null) {
      return null;
    } else {
      final __return__ = __result__;
    
      return __return__;
    }
  }
  
  
  Future<void> onEvent_arg0_arg1_data(int eventType, int arg0, int arg1, NSData eventData) async {
    // print log
    if (fluttifyLogEnabled) {
      print('fluttify-dart: IFlySpeechRecognizerDelegate@$refId::onEvent([\'eventType\':$eventType, \'arg0\':$arg0, \'arg1\':$arg1])');
    }
  
    // invoke native method
    final __result__ = await MethodChannel('com.fluttify/xftts_fluttify').invokeMethod('IFlySpeechRecognizerDelegate::onEvent_arg0_arg1_data', {"eventType": eventType, "arg0": arg0, "arg1": arg1, "eventData": eventData.refId, "refId": refId});
  
  
    // handle native call
  
  
    // convert native result to dart side object
    if (__result__ == null) {
      return null;
    } else {
      final __return__ = __result__;
    
      return __return__;
    }
  }
  
}